"""AI helper using OpenRouter.
Functions: chat_complete, humanize, generate_content.
"""

import os
import aiohttp
import json

OPENROUTER_API_KEY = os.getenv("OPENROUTER_API_KEY")


async def generate_ai_response(messages: list[dict], model: str = "openai/gpt-4o-mini", max_tokens: int = 800) -> str:
    """Generate AI response using OpenRouter"""
    if not OPENROUTER_API_KEY:
        return "ü§ñ AI –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."

    try:
        async with aiohttp.ClientSession() as session:
            headers = {
                "Authorization": f"Bearer {OPENROUTER_API_KEY}",
                "Content-Type": "application/json",
            }

            data = {
                "model": model,
                "messages": messages,
                "max_tokens": max_tokens,
                "temperature": 0.7
            }

            async with session.post(
                "https://openrouter.ai/api/v1/chat/completions",
                headers=headers,
                json=data
            ) as response:
                if response.status == 200:
                    result = await response.json()
                    return result["choices"][0]["message"]["content"].strip()
                else:
                    error_text = await response.text()
                    return f"ü§ñ AI –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥ {response.status})"

    except Exception as e:
        print(f"AI Error: {e}")
        return "ü§ñ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ AI –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."


async def generate_post_content(topic: str) -> str:
    """Generate post content for channel"""
    messages = [
        {"role": "system", "content": "–¢—ã —é—Ä–∏—Å—Ç, –ø–∏—à–µ—à—å –ø–æ–ª–µ–∑–Ω—ã–µ –ø–æ—Å—Ç—ã –¥–ª—è Telegram –∫–∞–Ω–∞–ª–∞. –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏."},
        {"role": "user", "content": f"–ù–∞–ø–∏—à–∏ –ø–æ—Å—Ç –Ω–∞ —Ç–µ–º—É: {topic}. –û–±—ä–µ–º 300-400 —Å–∏–º–≤–æ–ª–æ–≤."}
    ]
    return await generate_ai_response(messages)
