"""
üì∫ CHANNEL & COMMENTS FIX
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –∫–∞–Ω–∞–ª–∞–º–∏ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏
"""

import logging
import os
import asyncio
from typing import Optional, Dict, Any
from telegram import Bot, Chat, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.error import TelegramError, BadRequest, Forbidden
from telegram.constants import ChatType

logger = logging.getLogger(__name__)


class ChannelCommentsSetup:
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–æ–≤ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤"""

    def __init__(self, bot: Bot):
        self.bot = bot

    async def setup_channel_with_comments(self, channel_username: str) -> Dict[str, Any]:
        """
        –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤

        Args:
            channel_username: Username –∫–∞–Ω–∞–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, @legalcenter_pro)

        Returns:
            dict: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∫–∞–Ω–∞–ª–∞
        """
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞
            try:
                channel = await self.bot.get_chat(channel_username)
                logger.info(f"‚úÖ –ö–∞–Ω–∞–ª –Ω–∞–π–¥–µ–Ω: {channel.title}")
            except Exception as e:
                logger.error(f"‚ùå –ö–∞–Ω–∞–ª {channel_username} –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}")
                return {
                    "success": False,
                    "error": f"–ö–∞–Ω–∞–ª {channel_username} –Ω–µ –Ω–∞–π–¥–µ–Ω",
                    "suggestion": "–°–æ–∑–¥–∞–π—Ç–µ –∫–∞–Ω–∞–ª –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å username"
                }

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞
            try:
                bot_member = await self.bot.get_chat_member(channel_username, self.bot.id)
                if bot_member.status not in ['administrator', 'creator']:
                    logger.error(
                        f"‚ùå –ë–æ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞ {channel_username}")
                    return {
                        "success": False,
                        "error": "–ë–æ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞",
                        "suggestion": "–î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∫–∞–Ω–∞–ª–∞"
                    }
                logger.info(f"‚úÖ –ë–æ—Ç —è–≤–ª—è–µ—Ç—Å—è {bot_member.status} –∫–∞–Ω–∞–ª–∞")
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤: {e}")
                return {
                    "success": False,
                    "error": "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ –±–æ—Ç–∞",
                    "suggestion": "–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –±–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª"
                }

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–≤—è–∑–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã –æ–±—Å—É–∂–¥–µ–Ω–∏–π
            discussion_group = None
            if hasattr(channel, 'linked_chat_id') and channel.linked_chat_id:
                try:
                    discussion_group = await self.bot.get_chat(channel.linked_chat_id)
                    logger.info(
                        f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –≥—Ä—É–ø–ø–∞ –æ–±—Å—É–∂–¥–µ–Ω–∏–π: {discussion_group.title}")
                except Exception as e:
                    logger.warning(f"‚ö†Ô∏è –ì—Ä—É–ø–ø–∞ –æ–±—Å—É–∂–¥–µ–Ω–∏–π –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {e}")

            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            test_post = await self._create_test_post(channel_username)

            return {
                "success": True,
                "channel_id": channel.id,
                "channel_username": channel_username,
                "channel_title": channel.title,
                "discussion_group": {
                    "id": discussion_group.id if discussion_group else None,
                    "title": discussion_group.title if discussion_group else None,
                    "available": discussion_group is not None
                },
                "test_post": test_post,
                "bot_status": bot_member.status,
                "comments_enabled": discussion_group is not None
            }

        except Exception as e:
            logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞: {e}")
            return {
                "success": False,
                "error": str(e),
                "suggestion": "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞ –∏ –ø—Ä–∞–≤–∞ –±–æ—Ç–∞"
            }

    async def _create_test_post(self, channel_username: str) -> Dict[str, Any]:
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
        try:
            # –¢–µ—Å—Ç —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º markdown
            from .markdown_fix import prepare_telegram_message

            test_content = """üß™ **–¢–ï–°–¢–û–í–´–ô –ü–û–°–¢**

‚úÖ **–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã:**
‚Ä¢ –ö–∞–Ω–∞–ª –ø–æ–¥–∫–ª—é—á–µ–Ω
‚Ä¢ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç
‚Ä¢ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã

üí¨ **–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:** –º–æ–∂–µ—Ç–µ –ª–∏ –≤—ã –æ—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ–¥ —ç—Ç–∏–º –ø–æ—Å—Ç–æ–º?

üì± **–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è:** /start"""

            message_data = prepare_telegram_message(test_content)

            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            keyboard = [[
                InlineKeyboardButton("üì± –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–æ—Ç–∞",
                                     url=f"https://t.me/{self.bot.username}")
            ]]

            message = await self.bot.send_message(
                channel_username,
                **message_data,
                reply_markup=InlineKeyboardMarkup(keyboard)
            )

            logger.info(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç —Å–æ–∑–¥–∞–Ω: {message.message_id}")
            return {
                "success": True,
                "message_id": message.message_id,
                "url": f"https://t.me/{channel_username.replace('@', '')}/{message.message_id}"
            }

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞: {e}")
            return {
                "success": False,
                "error": str(e)
            }

    async def enable_comments_for_channel(self, channel_username: str) -> Dict[str, Any]:
        """
        –í–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –¥–ª—è –∫–∞–Ω–∞–ª–∞

        –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:
        1. –°–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É –æ–±—Å—É–∂–¥–µ–Ω–∏–π
        2. –°–≤—è–∑–∞—Ç—å –µ—ë —Å –∫–∞–Ω–∞–ª–æ–º
        3. –î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        """
        try:
            # –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –∫–∞–Ω–∞–ª–∞
            from .markdown_fix import prepare_telegram_message

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∫–∞–Ω–∞–ª
            channel_status = await self._check_channel_detailed(channel_username)

            instructions = f"""üìù **–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ï–í: {channel_username}**

üîç **–¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï:**
{channel_status}

üîß **–†–ï–®–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú–´:**

{"‚úÖ **–ö–ê–ù–ê–õ –ù–ê–°–¢–†–û–ï–ù –ü–†–ê–í–ò–õ–¨–ù–û**" if "‚úÖ" in channel_status else "‚ùå **–¢–†–ï–ë–£–ï–¢–°–Ø –†–£–ß–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê**"}

üìã **–ü–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∞:**

1Ô∏è‚É£ **–°–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É –æ–±—Å—É–∂–¥–µ–Ω–∏–π:**
   ‚Ä¢ –û—Ç–∫—Ä–æ–π—Ç–µ Telegram ‚Üí –°–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É
   ‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: "Legal Center - –û–±—Å—É–∂–¥–µ–Ω–∏—è" 
   ‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ @{self.bot.username} –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
   ‚Ä¢ –î–∞–π—Ç–µ –±–æ—Ç—É –í–°–ï –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

2Ô∏è‚É£ **–°–≤—è–∑–∞—Ç—å –≥—Ä—É–ø–ø—É —Å –∫–∞–Ω–∞–ª–æ–º:**
   ‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞ {channel_username} ‚Üí "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"
   ‚Ä¢ "–û–±—Å—É–∂–¥–µ–Ω–∏—è" ‚Üí –í—ã–±—Ä–∞—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É
   ‚Ä¢ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è

3Ô∏è‚É£ **–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç:**
   ‚Ä¢ –û–ø—É–±–ª–∏–∫—É–π—Ç–µ –ª—é–±–æ–π –ø–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª–µ
   ‚Ä¢ –ü–æ–¥ –ø–æ—Å—Ç–æ–º –¥–æ–ª–∂–Ω–∞ –ø–æ—è–≤–∏—Ç—å—Å—è –∫–Ω–æ–ø–∫–∞ "üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏"
   ‚Ä¢ –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –≥—Ä—É–ø–ø—É –æ–±—Å—É–∂–¥–µ–Ω–∏–π

üí° **–ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ï –†–ï–®–ï–ù–ò–Ø:**
‚úÖ –î–æ–±–∞–≤—å—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞–ø–∏—Å–∞—Ç—å –≤ –±–æ—Ç" –ø–æ–¥ –∫–∞–∂–¥—ã–π –ø–æ—Å—Ç
‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∞–∫—Ü–∏–∏ –≤–º–µ—Å—Ç–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤  
‚úÖ –ù–∞–ø—Ä–∞–≤–ª—è–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞

üÜò **–ù–£–ñ–ù–ê –ü–û–ú–û–©–¨?** –ù–∞–ø–∏—à–∏—Ç–µ @{self.bot.username} - –ø–æ–º–æ–∂–µ–º –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å!"""

            return {
                "success": True,
                "instructions": instructions,
                "auto_setup_possible": False,
                "next_steps": [
                    "–°–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É –æ–±—Å—É–∂–¥–µ–Ω–∏–π",
                    "–°–≤—è–∑–∞—Ç—å —Å –∫–∞–Ω–∞–ª–æ–º",
                    "–î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É",
                    "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å"
                ]
            }

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π: {e}")
            return {
                "success": False,
                "error": str(e)
            }

    async def _check_channel_detailed(self, channel_username: str) -> str:
        """–î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–∞–Ω–∞–ª–∞"""
        try:
            status_parts = []

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–Ω–∞–ª
            try:
                channel = await self.bot.get_chat(channel_username)
                status_parts.append(f"üì∫ **–ö–∞–Ω–∞–ª:** {channel.title} ‚úÖ")
                status_parts.append(f"üÜî **ID:** `{channel.id}`")
                status_parts.append(f"üë• **–¢–∏–ø:** {channel.type}")
            except Exception as e:
                status_parts.append(
                    f"üì∫ **–ö–∞–Ω–∞–ª:** {channel_username} ‚ùå (–Ω–µ –Ω–∞–π–¥–µ–Ω)")
                return "\n".join(status_parts)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞
            try:
                bot_member = await self.bot.get_chat_member(channel_username, self.bot.id)
                if bot_member.status in ['administrator', 'creator']:
                    status_parts.append(
                        f"ü§ñ **–ë–æ—Ç:** {bot_member.status.title()} ‚úÖ")
                else:
                    status_parts.append(
                        f"ü§ñ **–ë–æ—Ç:** {bot_member.status} ‚ùå (–Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞)")
            except Exception as e:
                status_parts.append(f"ü§ñ **–ë–æ—Ç:** ‚ùå (–Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª)")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥—Ä—É–ø–ø—É –æ–±—Å—É–∂–¥–µ–Ω–∏–π
            if hasattr(channel, 'linked_chat_id') and channel.linked_chat_id:
                try:
                    discussion_group = await self.bot.get_chat(channel.linked_chat_id)
                    status_parts.append(f"üí¨ **–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:** ‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω—ã")
                    status_parts.append(
                        f"üì± **–ì—Ä—É–ø–ø–∞:** {discussion_group.title}")
                except Exception as e:
                    status_parts.append(
                        f"üí¨ **–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:** ‚ùå (–≥—Ä—É–ø–ø–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞)")
            else:
                status_parts.append(
                    f"üí¨ **–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:** ‚ùå (–≥—Ä—É–ø–ø–∞ –Ω–µ —Å–≤—è–∑–∞–Ω–∞)")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å—Ç
            try:
                # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –Ω–µ–¥–∞–≤–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                status_parts.append(f"üìù **–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ—Å—Ç—ã:** –ü—Ä–æ–≤–µ—Ä—è–µ–º...")
            except Exception as e:
                status_parts.append(
                    f"üìù **–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ—Å—Ç—ã:** ‚ùå (–Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å)")

            return "\n".join(status_parts)

        except Exception as e:
            return f"‚ùå **–û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:** {str(e)}"


async def quick_channel_fix(bot: Bot, channel_username: str = None) -> Dict[str, Any]:
    """
    –ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –∫–∞–Ω–∞–ª–æ–º

    Args:
        bot: Telegram Bot instance
        channel_username: Username –∫–∞–Ω–∞–ª–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–æ–∑–¥–∞—Å—Ç –Ω–æ–≤—ã–π)
    """
    setup = ChannelCommentsSetup(bot)

    # –ï—Å–ª–∏ –∫–∞–Ω–∞–ª –Ω–µ —É–∫–∞–∑–∞–Ω, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π
    if not channel_username:
        return {
            "success": False,
            "error": "–ö–∞–Ω–∞–ª –Ω–µ —É–∫–∞–∑–∞–Ω",
            "suggestion": "–°–æ–∑–¥–∞–π—Ç–µ –∫–∞–Ω–∞–ª –∏ –≤—ã–∑–æ–≤–∏—Ç–µ: quick_channel_fix(bot, '@your_channel')",
            "recommended_channel": "@legalcenter_pro"
        }

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–∞–Ω–∞–ª
    result = await setup.setup_channel_with_comments(channel_username)

    if result["success"]:
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è production
        env_update = {
            "TARGET_CHANNEL_ID": result["channel_username"],
            "CHANNEL_ID": result["channel_username"],
            "CHANNEL_USERNAME": result["channel_username"]
        }

        result["env_update"] = env_update
        result["deployment_instructions"] = f"""
üöÄ **–î–õ–Ø –û–ë–ù–û–í–õ–ï–ù–ò–Ø PRODUCTION:**

1Ô∏è‚É£ **–û–±–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ Railway:**
   TARGET_CHANNEL_ID={result["channel_username"]}
   CHANNEL_ID={result["channel_username"]}

2Ô∏è‚É£ **–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:**
   git push origin main

3Ô∏è‚É£ **–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥:**
   /admin ‚Üí SMM ‚Üí –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–æ—Å—Ç
"""

    return result


def get_channel_status_report(bot: Bot) -> Dict[str, Any]:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ —Å—Ç–∞—Ç—É—Å–µ –∫–∞–Ω–∞–ª–∞"""
    current_channel = os.getenv('TARGET_CHANNEL_ID') or os.getenv(
        'CHANNEL_ID') or '@test_legal_channel'

    return {
        "current_channel": current_channel,
        "channel_exists": current_channel != '@test_legal_channel',
        "issues": {
            "channel_not_found": current_channel == '@test_legal_channel',
            "no_comments": True,  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º —á—Ç–æ –Ω–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
            "markdown_broken": True  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º —á—Ç–æ markdown —Å–ª–æ–º–∞–Ω
        },
        "fixes_available": True,
        "next_action": "–í—ã–∑–≤–∞—Ç—å quick_channel_fix() –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
    }
