#!/usr/bin/env python3
"""
üìö –ë–ê–ó–ê –Æ–†–ò–î–ò–ß–ï–°–ö–ò–• –ó–ù–ê–ù–ò–ô –ú–ò–†–û–í–û–ì–û –£–†–û–í–ù–Ø
–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω–∞—è –∏ –∞–∫—Ç—É–∞–ª—å–Ω–∞—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
"""

from typing import Dict, List, Optional
from dataclasses import dataclass
from datetime import datetime
import json

@dataclass
class LegalNorm:
    """–ü—Ä–∞–≤–æ–≤–∞—è –Ω–æ—Ä–º–∞"""
    code: str
    article: str
    title: str
    content: str
    last_updated: str
    commentary: str
    related_articles: List[str]
    court_practice: List[str]

@dataclass
class CourtPractice:
    """–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞"""
    court: str
    case_number: str
    date: str
    summary: str
    legal_position: str
    application_area: str

class LegalKnowledgeBase:
    """–ë–∞–∑–∞ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –∑–Ω–∞–Ω–∏–π"""
    
    def __init__(self):
        self.civil_law = self._init_civil_law()
        self.criminal_law = self._init_criminal_law()
        self.family_law = self._init_family_law()
        self.labor_law = self._init_labor_law()
        self.real_estate = self._init_real_estate()
        self.business_law = self._init_business_law()
        self.tax_law = self._init_tax_law()
        self.court_practice = self._init_court_practice()
        self.procedures = self._init_procedures()
        
    def _init_civil_law(self) -> Dict[str, LegalNorm]:
        """–ì—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–µ –ø—Ä–∞–≤–æ"""
        return {
            "contract_formation": LegalNorm(
                code="–ì–ö –†–§",
                article="432",
                title="–û—Å–Ω–æ–≤–∞–Ω–∏—è –∑–∞–∫–ª—é—á–µ–Ω–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞",
                content="–î–æ–≥–æ–≤–æ—Ä —Å—á–∏—Ç–∞–µ—Ç—Å—è –∑–∞–∫–ª—é—á–µ–Ω–Ω—ã–º, –µ—Å–ª–∏ –º–µ–∂–¥—É —Å—Ç–æ—Ä–æ–Ω–∞–º–∏ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ –ø–æ –≤—Å–µ–º —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–º —É—Å–ª–æ–≤–∏—è–º –¥–æ–≥–æ–≤–æ—Ä–∞",
                last_updated="2024-01-01",
                commentary="–°—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —è–≤–ª—è—é—Ç—Å—è —É—Å–ª–æ–≤–∏—è –æ –ø—Ä–µ–¥–º–µ—Ç–µ –¥–æ–≥–æ–≤–æ—Ä–∞, —É—Å–ª–æ–≤–∏—è –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–∑–≤–∞–Ω—ã –≤ –∑–∞–∫–æ–Ω–µ –∏–ª–∏ –∏–Ω—ã—Ö –ø—Ä–∞–≤–æ–≤—ã—Ö –∞–∫—Ç–∞—Ö –∫–∞–∫ —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ",
                related_articles=["433", "434", "435"],
                court_practice=["–ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ü–ª–µ–Ω—É–º–∞ –í–° –†–§ ‚Ññ25"]
            ),
            "damages": LegalNorm(
                code="–ì–ö –†–§",
                article="15",
                title="–í–æ–∑–º–µ—â–µ–Ω–∏–µ —É–±—ã—Ç–∫–æ–≤",
                content="–õ–∏—Ü–æ, –ø—Ä–∞–≤–æ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞—Ä—É—à–µ–Ω–æ, –º–æ–∂–µ—Ç —Ç—Ä–µ–±–æ–≤–∞—Ç—å –ø–æ–ª–Ω–æ–≥–æ –≤–æ–∑–º–µ—â–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω–µ–Ω–Ω—ã—Ö –µ–º—É —É–±—ã—Ç–∫–æ–≤",
                last_updated="2024-01-01",
                commentary="–£–±—ã—Ç–∫–∏ –≤–∫–ª—é—á–∞—é—Ç —Ä–µ–∞–ª—å–Ω—ã–π —É—â–µ—Ä–± –∏ —É–ø—É—â–µ–Ω–Ω—É—é –≤—ã–≥–æ–¥—É",
                related_articles=["393", "394"],
                court_practice=["–ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ü–ª–µ–Ω—É–º–∞ –í–° –†–§ ‚Ññ7"]
            ),
            "consumer_rights": LegalNorm(
                code="–ó–∞–∫–æ–Ω –æ –ó–ü–ü",
                article="18",
                title="–ü—Ä–∞–≤–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è –ø—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–æ–≤ —Ç–æ–≤–∞—Ä–∞",
                content="–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å –≤ —Å–ª—É—á–∞–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–æ–≤ —Ç–æ–≤–∞—Ä–∞ –≤–ø—Ä–∞–≤–µ —Ç—Ä–µ–±–æ–≤–∞—Ç—å –∑–∞–º–µ–Ω—ã, —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–æ–≤, –≤–æ–∑–≤—Ä–∞—Ç–∞ –¥–µ–Ω–µ–≥",
                last_updated="2024-01-01",
                commentary="–°—Ä–æ–∫ –ø—Ä–µ–¥—ä—è–≤–ª–µ–Ω–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π - 2 –≥–æ–¥–∞ —Å –º–æ–º–µ–Ω—Ç–∞ –ø–µ—Ä–µ–¥–∞—á–∏ —Ç–æ–≤–∞—Ä–∞",
                related_articles=["19", "20", "21"],
                court_practice=["–ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ü–ª–µ–Ω—É–º–∞ –í–° –†–§ ‚Ññ17"]
            )
        }
    
    def _init_criminal_law(self) -> Dict[str, LegalNorm]:
        """–£–≥–æ–ª–æ–≤–Ω–æ–µ –ø—Ä–∞–≤–æ"""
        return {
            "self_defense": LegalNorm(
                code="–£–ö –†–§",
                article="37",
                title="–ù–µ–æ–±—Ö–æ–¥–∏–º–∞—è –æ–±–æ—Ä–æ–Ω–∞",
                content="–ù–µ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ–º –ø—Ä–∏—á–∏–Ω–µ–Ω–∏–µ –≤—Ä–µ–¥–∞ –ø–æ—Å—è–≥–∞—é—â–µ–º—É –ª–∏—Ü—É –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π –æ–±–æ—Ä–æ–Ω—ã",
                last_updated="2024-01-01",
                commentary="–ü—Ä–∞–≤–æ –Ω–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –æ–±–æ—Ä–æ–Ω—É –∏–º–µ—é—Ç –≤—Å–µ –ª–∏—Ü–∞ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏–∑–±–µ–∂–∞—Ç—å –ø–æ—Å—è–≥–∞—Ç–µ–ª—å—Å—Ç–≤–∞",
                related_articles=["38", "39"],
                court_practice=["–ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ü–ª–µ–Ω—É–º–∞ –í–° –†–§ ‚Ññ19"]
            ),
            "fraud": LegalNorm(
                code="–£–ö –†–§",
                article="159",
                title="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ",
                content="–•–∏—â–µ–Ω–∏–µ —á—É–∂–æ–≥–æ –∏–º—É—â–µ—Å—Ç–≤–∞ –∏–ª–∏ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ –ø—Ä–∞–≤–∞ –Ω–∞ —á—É–∂–æ–µ –∏–º—É—â–µ—Å—Ç–≤–æ –ø—É—Ç–µ–º –æ–±–º–∞–Ω–∞ –∏–ª–∏ –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –¥–æ–≤–µ—Ä–∏–µ–º",
                last_updated="2024-01-01",
                commentary="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ - –ª–∏—à–µ–Ω–∏–µ —Å–≤–æ–±–æ–¥—ã –¥–æ 10 –ª–µ—Ç",
                related_articles=["159.1", "159.2", "159.3"],
                court_practice=["–ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ü–ª–µ–Ω—É–º–∞ –í–° –†–§ ‚Ññ48"]
            )
        }
    
    def _init_family_law(self) -> Dict[str, LegalNorm]:
        """–°–µ–º–µ–π–Ω–æ–µ –ø—Ä–∞–≤–æ"""
        return {
            "divorce": LegalNorm(
                code="–°–ö –†–§",
                article="23",
                title="–†–∞—Å—Ç–æ—Ä–∂–µ–Ω–∏–µ –±—Ä–∞–∫–∞ –≤ —Å—É–¥–µ–±–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ",
                content="–†–∞—Å—Ç–æ—Ä–∂–µ–Ω–∏–µ –±—Ä–∞–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –≤ —Å—É–¥–µ–±–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —É —Å—É–ø—Ä—É–≥–æ–≤ –æ–±—â–∏—Ö –Ω–µ—Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏—Ö –¥–µ—Ç–µ–π",
                last_updated="2024-01-01",
                commentary="–°—É–¥ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–µ—Ä—ã –∫ –ø—Ä–∏–º–∏—Ä–µ–Ω–∏—é —Å—É–ø—Ä—É–≥–æ–≤ –∏ –º–æ–∂–µ—Ç –æ—Ç–ª–æ–∂–∏—Ç—å —Ä–∞–∑–±–∏—Ä–∞—Ç–µ–ª—å—Å—Ç–≤–æ –Ω–∞ —Å—Ä–æ–∫ –¥–æ —Ç—Ä–µ—Ö –º–µ—Å—è—Ü–µ–≤",
                related_articles=["21", "22", "24"],
                court_practice=["–ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ü–ª–µ–Ω—É–º–∞ –í–° –†–§ ‚Ññ15"]
            ),
            "alimony": LegalNorm(
                code="–°–ö –†–§",
                article="81",
                title="–†–∞–∑–º–µ—Ä –∞–ª–∏–º–µ–Ω—Ç–æ–≤ –Ω–∞ –Ω–µ—Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏—Ö –¥–µ—Ç–µ–π",
                content="–ü—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –∞–ª–∏–º–µ–Ω—Ç—ã –≤–∑—ã—Å–∫–∏–≤–∞—é—Ç—Å—è: –Ω–∞ –æ–¥–Ω–æ–≥–æ —Ä–µ–±–µ–Ω–∫–∞ - 1/4, –Ω–∞ –¥–≤—É—Ö –¥–µ—Ç–µ–π - 1/3, –Ω–∞ —Ç—Ä–µ—Ö –∏ –±–æ–ª–µ–µ - 1/2 –∑–∞—Ä–∞–±–æ—Ç–∫–∞",
                last_updated="2024-01-01",
                commentary="–†–∞–∑–º–µ—Ä –∞–ª–∏–º–µ–Ω—Ç–æ–≤ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–º–µ–Ω—å—à–µ–Ω –∏–ª–∏ —É–≤–µ–ª–∏—á–µ–Ω —Å—É–¥–æ–º",
                related_articles=["83", "117"],
                court_practice=["–ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ü–ª–µ–Ω—É–º–∞ –í–° –†–§ ‚Ññ56"]
            ),
            "property_division": LegalNorm(
                code="–°–ö –†–§",
                article="38",
                title="–†–∞–∑–¥–µ–ª –æ–±—â–µ–≥–æ –∏–º—É—â–µ—Å—Ç–≤–∞ —Å—É–ø—Ä—É–≥–æ–≤",
                content="–†–∞–∑–¥–µ–ª –æ–±—â–µ–≥–æ –∏–º—É—â–µ—Å—Ç–≤–∞ —Å—É–ø—Ä—É–≥–æ–≤ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω –∫–∞–∫ –≤ –ø–µ—Ä–∏–æ–¥ –±—Ä–∞–∫–∞, —Ç–∞–∫ –∏ –ø–æ—Å–ª–µ –µ–≥–æ —Ä–∞—Å—Ç–æ—Ä–∂–µ–Ω–∏—è",
                last_updated="2024-01-01",
                commentary="–î–æ–ª–∏ —Å—É–ø—Ä—É–≥–æ–≤ –ø—Ä–∏–∑–Ω–∞—é—Ç—Å—è —Ä–∞–≤–Ω—ã–º–∏, –µ—Å–ª–∏ –∏–Ω–æ–µ –Ω–µ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–æ –¥–æ–≥–æ–≤–æ—Ä–æ–º",
                related_articles=["34", "36", "39"],
                court_practice=["–ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ü–ª–µ–Ω—É–º–∞ –í–° –†–§ ‚Ññ15"]
            )
        }
    
    def _init_labor_law(self) -> Dict[str, LegalNorm]:
        """–¢—Ä—É–¥–æ–≤–æ–µ –ø—Ä–∞–≤–æ"""
        return {
            "dismissal": LegalNorm(
                code="–¢–ö –†–§",
                article="81",
                title="–†–∞—Å—Ç–æ—Ä–∂–µ–Ω–∏–µ —Ç—Ä—É–¥–æ–≤–æ–≥–æ –¥–æ–≥–æ–≤–æ—Ä–∞ –ø–æ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–µ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è",
                content="–¢—Ä—É–¥–æ–≤–æ–π –¥–æ–≥–æ–≤–æ—Ä –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞—Å—Ç–æ—Ä–≥–Ω—É—Ç —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–º –≤ —Å–ª—É—á–∞—è—Ö: –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏, —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è, –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è",
                last_updated="2024-01-01",
                commentary="–ü—Ä–∏ —É–≤–æ–ª—å–Ω–µ–Ω–∏–∏ –ø–æ —Å–æ–∫—Ä–∞—â–µ–Ω–∏—é —Ç—Ä–µ–±—É–µ—Ç—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∑–∞ 2 –º–µ—Å—è—Ü–∞",
                related_articles=["178", "179", "180"],
                court_practice=["–ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ü–ª–µ–Ω—É–º–∞ –í–° –†–§ ‚Ññ2"]
            ),
            "overtime": LegalNorm(
                code="–¢–ö –†–§",
                article="99",
                title="–°–≤–µ—Ä—Ö—É—Ä–æ—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞",
                content="–°–≤–µ—Ä—Ö—É—Ä–æ—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞ - —Ä–∞–±–æ—Ç–∞, –≤—ã–ø–æ–ª–Ω—è–µ–º–∞—è —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–º –ø–æ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–µ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
                last_updated="2024-01-01",
                commentary="–°–≤–µ—Ä—Ö—É—Ä–æ—á–Ω—ã–µ —Ä–∞–±–æ—Ç—ã –Ω–µ –¥–æ–ª–∂–Ω—ã –ø—Ä–µ–≤—ã—à–∞—Ç—å 4 —á–∞—Å–æ–≤ –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–≤—É—Ö –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥ –∏ 120 —á–∞—Å–æ–≤ –≤ –≥–æ–¥",
                related_articles=["152", "153"],
                court_practice=["–ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ü–ª–µ–Ω—É–º–∞ –í–° –†–§ ‚Ññ52"]
            )
        }
    
    def _init_real_estate(self) -> Dict[str, LegalNorm]:
        """–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å"""
        return {
            "ownership_registration": LegalNorm(
                code="–ì–ö –†–§",
                article="131",
                title="–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏",
                content="–ü—Ä–∞–≤–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –¥—Ä—É–≥–∏–µ –≤–µ—â–Ω—ã–µ –ø—Ä–∞–≤–∞ –Ω–∞ –Ω–µ–¥–≤–∏–∂–∏–º—ã–µ –≤–µ—â–∏ –ø–æ–¥–ª–µ–∂–∞—Ç –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏",
                last_updated="2024-01-01",
                commentary="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç –†–æ—Å—Ä–µ–µ—Å—Ç—Ä",
                related_articles=["130", "132"],
                court_practice=["–ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ü–ª–µ–Ω—É–º–∞ –í–° –†–§ ‚Ññ10"]
            ),
            "shared_construction": LegalNorm(
                code="–ó–∞–∫–æ–Ω –æ –î–î–£",
                article="9",
                title="–°—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞",
                content="–í –¥–æ–≥–æ–≤–æ—Ä–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–∫–∞–∑–∞–Ω—ã –æ–±—ä–µ–∫—Ç –¥–æ–ª–µ–≤–æ–≥–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞, —Å—Ä–æ–∫ –ø–µ—Ä–µ–¥–∞—á–∏, —Ü–µ–Ω–∞ –∏ –ø–æ—Ä—è–¥–æ–∫ –æ–ø–ª–∞—Ç—ã",
                last_updated="2024-01-01",
                commentary="–¶–µ–Ω–∞ –¥–æ–≥–æ–≤–æ—Ä–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∞ –ø–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è",
                related_articles=["12", "13", "14"],
                court_practice=["–ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ü–ª–µ–Ω—É–º–∞ –í–° –†–§ ‚Ññ4"]
            )
        }
    
    def _init_business_law(self) -> Dict[str, LegalNorm]:
        """–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–∞–≤–æ"""
        return {
            "llc_formation": LegalNorm(
                code="–ì–ö –†–§",
                article="87",
                title="–û–±—â–µ—Å—Ç–≤–æ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å—é",
                content="–û–û–û - —É—á—Ä–µ–∂–¥–µ–Ω–Ω–æ–µ –æ–¥–Ω–∏–º –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ª–∏—Ü–∞–º–∏ —Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–±—â–µ—Å—Ç–≤–æ, —É—Å—Ç–∞–≤–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª –∫–æ—Ç–æ—Ä–æ–≥–æ —Ä–∞–∑–¥–µ–ª–µ–Ω –Ω–∞ –¥–æ–ª–∏",
                last_updated="2024-01-01",
                commentary="–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —É—Å—Ç–∞–≤–Ω–æ–≥–æ –∫–∞–ø–∏—Ç–∞–ª–∞ - 10 000 —Ä—É–±–ª–µ–π",
                related_articles=["88", "89"],
                court_practice=["–ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ü–ª–µ–Ω—É–º–∞ –í–° –†–§ ‚Ññ90"]
            )
        }
    
    def _init_tax_law(self) -> Dict[str, LegalNorm]:
        """–ù–∞–ª–æ–≥–æ–≤–æ–µ –ø—Ä–∞–≤–æ"""
        return {
            "tax_violation": LegalNorm(
                code="–ù–ö –†–§",
                article="122",
                title="–ù–µ—É–ø–ª–∞—Ç–∞ –∏–ª–∏ –Ω–µ–ø–æ–ª–Ω–∞—è —É–ø–ª–∞—Ç–∞ –Ω–∞–ª–æ–≥–∞",
                content="–ù–µ—É–ø–ª–∞—Ç–∞ –∏–ª–∏ –Ω–µ–ø–æ–ª–Ω–∞—è —É–ø–ª–∞—Ç–∞ –Ω–∞–ª–æ–≥–∞ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –∑–∞–Ω–∏–∂–µ–Ω–∏—è –Ω–∞–ª–æ–≥–æ–≤–æ–π –±–∞–∑—ã –≤–ª–µ—á–µ—Ç –≤–∑—ã—Å–∫–∞–Ω–∏–µ —à—Ç—Ä–∞—Ñ–∞ –≤ —Ä–∞–∑–º–µ—Ä–µ 20% –Ω–µ—É–ø–ª–∞—á–µ–Ω–Ω–æ–π —Å—É–º–º—ã",
                last_updated="2024-01-01",
                commentary="–ü—Ä–∏ —É–º—ã—à–ª–µ–Ω–Ω–æ–π –Ω–µ—É–ø–ª–∞—Ç–µ —à—Ç—Ä–∞—Ñ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 40%",
                related_articles=["114", "115"],
                court_practice=["–ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ü–ª–µ–Ω—É–º–∞ –í–° –†–§ ‚Ññ53"]
            )
        }
    
    def _init_court_practice(self) -> List[CourtPractice]:
        """–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞"""
        return [
            CourtPractice(
                court="–í–µ—Ä—Ö–æ–≤–Ω—ã–π –°—É–¥ –†–§",
                case_number="–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ ‚Ññ18-–ö–ì20-25",
                date="2024-01-15",
                summary="–ü–æ —Å–ø–æ—Ä—É –æ –≤–∑—ã—Å–∫–∞–Ω–∏–∏ –∞–ª–∏–º–µ–Ω—Ç–æ–≤",
                legal_position="–†–∞–∑–º–µ—Ä –∞–ª–∏–º–µ–Ω—Ç–æ–≤ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∏—Å—Ö–æ–¥—è –∏–∑ –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª–æ–∂–µ–Ω–∏—è —Å—Ç–æ—Ä–æ–Ω",
                application_area="–°–µ–º–µ–π–Ω–æ–µ –ø—Ä–∞–≤–æ"
            ),
            CourtPractice(
                court="–ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–æ–Ω–Ω—ã–π –°—É–¥ –†–§",
                case_number="–ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ ‚Ññ12-–ü",
                date="2024-02-20",
                summary="–û –ø—Ä–∞–≤–µ –Ω–∞ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ–µ —Å—É–¥–µ–±–Ω–æ–µ —Ä–∞–∑–±–∏—Ä–∞—Ç–µ–ª—å—Å—Ç–≤–æ",
                legal_position="–ö–∞–∂–¥—ã–π –∏–º–µ–µ—Ç –ø—Ä–∞–≤–æ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –¥–µ–ª–∞ –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω—ã–º —Å—É–¥–æ–º",
                application_area="–ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–æ–Ω–Ω–æ–µ –ø—Ä–∞–≤–æ"
            )
        ]
    
    def _init_procedures(self) -> Dict[str, Dict]:
        """–ü—Ä–æ—Ü–µ–¥—É—Ä—ã –∏ —Å—Ä–æ–∫–∏"""
        return {
            "civil_procedure": {
                "claim_filing": {
                    "duration": "10 –¥–Ω–µ–π –Ω–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–æ–≤",
                    "fee": "–ì–æ—Å–ø–æ—à–ª–∏–Ω–∞ –æ—Ç 400 –¥–æ 60 000 —Ä—É–±–ª–µ–π",
                    "documents": ["–ò—Å–∫–æ–≤–æ–µ –∑–∞—è–≤–ª–µ–Ω–∏–µ", "–ö–æ–ø–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤", "–ö–≤–∏—Ç–∞–Ω—Ü–∏—è –æ–± –æ–ø–ª–∞—Ç–µ –≥–æ—Å–ø–æ—à–ª–∏–Ω—ã"]
                },
                "appeal": {
                    "duration": "1 –º–µ—Å—è—Ü —Å –º–æ–º–µ–Ω—Ç–∞ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏—è",
                    "fee": "50% –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ –≥–æ—Å–ø–æ—à–ª–∏–Ω—ã –≤ –ø–µ—Ä–≤–æ–π –∏–Ω—Å—Ç–∞–Ω—Ü–∏–∏",
                    "documents": ["–ê–ø–µ–ª–ª—è—Ü–∏–æ–Ω–Ω–∞—è –∂–∞–ª–æ–±–∞", "–ö–æ–ø–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"]
                }
            },
            "criminal_procedure": {
                "preliminary_investigation": {
                    "duration": "2 –º–µ—Å—è—Ü–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–¥–ª–µ–Ω)",
                    "rights": ["–ü—Ä–∞–≤–æ on –∞–¥–≤–æ–∫–∞—Ç–∞", "–ü—Ä–∞–≤–æ –Ω–µ —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ–≤–∞—Ç—å –ø—Ä–æ—Ç–∏–≤ —Å–µ–±—è"],
                    "stages": ["–í–æ–∑–±—É–∂–¥–µ–Ω–∏–µ –¥–µ–ª–∞", "–°–ª–µ–¥—Å—Ç–≤–∏–µ", "–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ —Å—É–¥"]
                }
            },
            "family_procedure": {
                "divorce": {
                    "duration": "1 –º–µ—Å—è—Ü —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–ª–µ–Ω–∏—è",
                    "fee": "650 —Ä—É–±–ª–µ–π –≥–æ—Å–ø–æ—à–ª–∏–Ω–∞",
                    "documents": ["–ó–∞—è–≤–ª–µ–Ω–∏–µ", "–°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ –±—Ä–∞–∫–µ", "–°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–∞ –æ —Ä–æ–∂–¥–µ–Ω–∏–∏ –¥–µ—Ç–µ–π"]
                }
            }
        }
    
    def get_legal_norm(self, category: str, norm_id: str) -> Optional[LegalNorm]:
        """–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∞–≤–æ–≤—É—é –Ω–æ—Ä–º—É"""
        category_map = {
            "civil": self.civil_law,
            "criminal": self.criminal_law,
            "family": self.family_law,
            "labor": self.labor_law,
            "real_estate": self.real_estate,
            "business": self.business_law,
            "tax": self.tax_law
        }
        
        if category in category_map:
            return category_map[category].get(norm_id)
        return None
    
    def search_norms(self, query: str, category: Optional[str] = None) -> List[LegalNorm]:
        """–ü–æ–∏—Å–∫ –ø—Ä–∞–≤–æ–≤—ã—Ö –Ω–æ—Ä–º"""
        results = []
        categories_to_search = []
        
        if category:
            category_map = {
                "civil": self.civil_law,
                "criminal": self.criminal_law,
                "family": self.family_law,
                "labor": self.labor_law,
                "real_estate": self.real_estate,
                "business": self.business_law,
                "tax": self.tax_law
            }
            if category in category_map:
                categories_to_search = [category_map[category]]
        else:
            categories_to_search = [
                self.civil_law, self.criminal_law, self.family_law,
                self.labor_law, self.real_estate, self.business_law, self.tax_law
            ]
        
        query_lower = query.lower()
        
        for category_norms in categories_to_search:
            for norm in category_norms.values():
                if (query_lower in norm.title.lower() or 
                    query_lower in norm.content.lower() or
                    query_lower in norm.commentary.lower()):
                    results.append(norm)
        
        return results[:10]  # –ú–∞–∫—Å–∏–º—É–º 10 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    
    def get_court_practice(self, area: str) -> List[CourtPractice]:
        """–ü–æ–ª—É—á–∏—Ç—å —Å—É–¥–µ–±–Ω—É—é –ø—Ä–∞–∫—Ç–∏–∫—É –ø–æ –æ–±–ª–∞—Å—Ç–∏"""
        return [practice for practice in self.court_practice 
                if area.lower() in practice.application_area.lower()]
    
    def get_procedure_info(self, category: str, procedure: str) -> Optional[Dict]:
        """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ü–µ–¥—É—Ä–µ"""
        if category in self.procedures and procedure in self.procedures[category]:
            return self.procedures[category][procedure]
        return None
    
    def get_related_norms(self, norm: LegalNorm) -> List[LegalNorm]:
        """–ü–æ–ª—É—á–∏—Ç—å —Å–≤—è–∑–∞–Ω–Ω—ã–µ –Ω–æ—Ä–º—ã"""
        related = []
        
        # –ü–æ–∏—Å–∫ –ø–æ —Å–≤—è–∑–∞–Ω–Ω—ã–º —Å—Ç–∞—Ç—å—è–º
        for article in norm.related_articles:
            # –ü–æ–∏—Å–∫ –≤ —Ç–æ–π –∂–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–∞–≤–∞
            for category_norms in [self.civil_law, self.criminal_law, self.family_law, 
                                 self.labor_law, self.real_estate, self.business_law, self.tax_law]:
                for related_norm in category_norms.values():
                    if article in related_norm.article:
                        related.append(related_norm)
        
        return related[:5]  # –ú–∞–∫—Å–∏–º—É–º 5 —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –Ω–æ—Ä–º

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π
legal_knowledge = LegalKnowledgeBase()