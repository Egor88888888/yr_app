#!/usr/bin/env python3
"""
–ú–ò–ù–ò–ú–ê–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï
–ó–∞–º–µ–Ω—è–µ—Ç —Ä–∞–∑–¥—É—Ç—ã–π production_testing.py (540 —Å—Ç—Ä–æ–∫ ‚Üí ~50 —Å—Ç—Ä–æ–∫)
"""

import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes

from bot.config.settings import is_admin
from bot.core.metrics import get_system_stats

logger = logging.getLogger(__name__)

async def cmd_test_system(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ë–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã"""
    user = update.effective_user
    
    if not is_admin(user.id):
        await update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")
        return
    
    try:
        stats = get_system_stats()
        await update.message.reply_text(
            f"‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç\n"
            f"üìä –ó–∞–ø—Ä–æ—Å–æ–≤: {stats.get('total_requests', 0)}\n"
            f"‚è±Ô∏è –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {stats.get('uptime_human', 'N/A')}"
        )
    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")

def register_production_testing_handlers(app: Application):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    app.add_handler(CommandHandler("test", cmd_test_system))
    
    logger.info("‚úÖ Minimal testing handlers registered")