"""
üéõÔ∏è SMM ADMIN PANEL
Administrative commands for Professional SMM System management
"""

import logging
import json
from datetime import datetime, timedelta
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, CommandHandler, CallbackQueryHandler

from ..services.smm_integration import get_smm_integration

logger = logging.getLogger(__name__)

# –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ (–¥–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–π Telegram ID)
ADMIN_IDS = [
    343688708,  # Egor D. - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –±–æ—Ç–∞
    439952839,  # –î–º–∏—Ç—Ä–∏–π –ù–æ—Å–æ–≤ - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –±–æ—Ç–∞
]


def is_admin(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º"""
    return user_id in ADMIN_IDS


async def smm_status_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /smm_status - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å SMM —Å–∏—Å—Ç–µ–º—ã"""

    if not is_admin(update.effective_user.id):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ")
        return

    try:
        smm_integration = get_smm_integration()

        if not smm_integration:
            await update.message.reply_text("‚ùå SMM —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
            return

        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
        status = await smm_integration.smm_system.get_system_status()

        status_text = f"""üéØ **–°–¢–ê–¢–£–° SMM –°–ò–°–¢–ï–ú–´**

üîÑ **–°–æ—Å—Ç–æ—è–Ω–∏–µ:** {'üü¢ –ê–∫—Ç–∏–≤–Ω–∞' if status['is_running'] else 'üî¥ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'}
‚öôÔ∏è **–†–µ–∂–∏–º:** {status['system_mode']}
üìä **–°—Ç—Ä–∞—Ç–µ–≥–∏—è:** {status['content_strategy']}

üìù **–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã (24—á):** {status['upcoming_posts_24h']}
üí¨ **–ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Å—Å–∏–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è:** {status['active_interaction_sessions']}
üí° **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:** {status['optimization_suggestions_count']}

üïê **–ü–æ—Å–ª–µ–¥–Ω—è—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è:** {status['last_optimization'][:19]}

üéõÔ∏è **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:**"""

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        keyboard = [
            [
                InlineKeyboardButton(
                    "üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞", callback_data="smm_analytics"),
                InlineKeyboardButton(
                    "üéØ –°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç", callback_data="smm_create_post")
            ],
            [
                InlineKeyboardButton(
                    "‚öôÔ∏è‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="smm_settings"),
                InlineKeyboardButton(
                    "üîÑ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è", callback_data="smm_optimize")
            ],
            [
                InlineKeyboardButton("üü¢ –°—Ç–∞—Ä—Ç" if not status['is_running'] else "üî¥ –°—Ç–æ–ø",
                                     callback_data="smm_toggle"),
                InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="smm_status")
            ]
        ]

        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.message.reply_text(
            status_text,
            reply_markup=reply_markup,
            parse_mode='Markdown'
        )

    except Exception as e:
        logger.error(f"Error in smm_status_command: {e}")
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {str(e)}")


async def smm_analytics_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /smm_analytics - –ø–æ–∫–∞–∑–∞—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É"""

    if not is_admin(update.effective_user.id):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ")
        return

    try:
        smm_integration = get_smm_integration()

        if not smm_integration:
            await update.message.reply_text("‚ùå SMM —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
            return

        # –ü–æ–ª—É—á–∞–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
        analytics = await smm_integration.get_smm_analytics_report(days_back=7)

        if 'error' in analytics:
            await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: {analytics['error']}")
            return

        smm_perf = analytics.get('smm_performance', {})
        bot_integration = analytics.get('bot_integration', {})

        analytics_text = f"""üìä **–ê–ù–ê–õ–ò–¢–ò–ö–ê SMM –°–ò–°–¢–ï–ú–´** (7 –¥–Ω–µ–π)

üìù **–ö–æ–Ω—Ç–µ–Ω—Ç:**
‚Ä¢ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –ø–æ—Å—Ç–æ–≤: {smm_perf.get('total_posts', 0)}
‚Ä¢ –û–±—â–µ–µ –≤–æ–≤–ª–µ—á–µ–Ω–∏–µ: {smm_perf.get('total_engagement', 0):,}
‚Ä¢ –°—Ä–µ–¥–Ω–∏–π engagement rate: {smm_perf.get('engagement_rate', 0):.2%}
‚Ä¢ –í–∏—Ä—É—Å–Ω—ã–µ —Ö–∏—Ç—ã: {smm_perf.get('viral_hits', 0)}

üéØ **–ö–æ–Ω–≤–µ—Ä—Å–∏–∏:**
‚Ä¢ –í—Å–µ–≥–æ –∫–æ–Ω–≤–µ—Ä—Å–∏–π: {smm_perf.get('conversions', 0)}
‚Ä¢ Conversion rate: {smm_perf.get('conversion_rate', 0):.2%}
‚Ä¢ –ê—Ç—Ä–∏–±—É—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Ö–æ–¥: {smm_perf.get('revenue_attributed', 0):,.0f}‚ÇΩ

üìà **–†–æ—Å—Ç –∞—É–¥–∏—Ç–æ—Ä–∏–∏:** {smm_perf.get('audience_growth', 0):+.1%}

ü§ñ **–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –±–æ—Ç–æ–º:**
‚Ä¢ –ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–∑ –∫–∞–Ω–∞–ª–∞: {bot_integration.get('new_users_from_channel', 0)}
‚Ä¢ –ó–∞–ø—Ä–æ—Å—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π: {bot_integration.get('consultations_requested', 0)}
‚Ä¢ –ö–æ–Ω–≤–µ—Ä—Å–∏—è –∫–∞–Ω–∞–ª‚Üí–±–æ—Ç: {bot_integration.get('conversion_rate_channel_to_bot', 0):.1%}

üî• **–¢–æ–ø —Ç–∏–ø—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞:**"""

        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ø —Ç–∏–ø—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        top_types = smm_perf.get('top_content_types', [])
        for i, content_type in enumerate(top_types[:3], 1):
            analytics_text += f"\n{i}. {content_type}"

        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        recommendations = analytics.get('recommendations', [])
        if recommendations:
            analytics_text += "\n\nüí° **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**"
            for i, rec in enumerate(recommendations[:3], 1):
                rec_title = rec.get('title', '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è')
                analytics_text += f"\n{i}. {rec_title}"

        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –æ–ø—Ü–∏—è–º–∏
        keyboard = [
            [
                InlineKeyboardButton(
                    "üìà –î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞", callback_data="smm_detailed_analytics"),
                InlineKeyboardButton("üìä –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö",
                                     callback_data="smm_export_data")
            ],
            [
                InlineKeyboardButton(
                    "üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="smm_analytics"),
                InlineKeyboardButton("‚óÄÔ∏è‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_status")
            ]
        ]

        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.message.reply_text(
            analytics_text,
            reply_markup=reply_markup,
            parse_mode='Markdown'
        )

    except Exception as e:
        logger.error(f"Error in smm_analytics_command: {e}")
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: {str(e)}")


async def smm_create_post_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /smm_create_post - —Å–æ–∑–¥–∞—Ç—å —É–º–Ω—ã–π –ø–æ—Å—Ç"""

    if not is_admin(update.effective_user.id):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ")
        return

    try:
        smm_integration = get_smm_integration()

        if not smm_integration:
            await update.message.reply_text("‚ùå SMM —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
            return

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏ –ø–ª–∞–Ω–∏—Ä—É–µ–º –ø–æ—Å—Ç
        await update.message.reply_text("ü§ñ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç...")

        result = await smm_integration.schedule_smart_post()

        success_text = f"""‚úÖ **–ü–û–°–¢ –°–û–ó–î–ê–ù –ò –ó–ê–ü–õ–ê–ù–ò–†–û–í–ê–ù**

üÜî **ID –ø–æ—Å—Ç–∞:** {result['post_id']}
‚è∞ **–í—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:** {result['scheduled_time'][:19]}
üìä **–û–∂–∏–¥–∞–µ–º–æ–µ –≤–æ–≤–ª–µ—á–µ–Ω–∏–µ:** {result['expected_engagement']:.2%}
üß™ **A/B —Ç–µ—Å—Ç:** {'‚úÖ –í–∫–ª—é—á–µ–Ω' if result['ab_test_enabled'] else '‚ùå –í—ã–∫–ª—é—á–µ–Ω'}
üí¨ **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è–º–∏:** {'‚úÖ –í–∫–ª—é—á–µ–Ω–æ' if result['interaction_session_started'] else '‚ùå –í—ã–∫–ª—é—á–µ–Ω–æ'}

üéØ –ü–æ—Å—Ç –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è!"""

        keyboard = [
            [
                InlineKeyboardButton(
                    "üìù –°–æ–∑–¥–∞—Ç—å –µ—â–µ", callback_data="smm_create_post"),
                InlineKeyboardButton(
                    "üìã –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data="smm_schedule")
            ],
            [
                InlineKeyboardButton("‚óÄÔ∏è‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_status")
            ]
        ]

        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.message.reply_text(
            success_text,
            reply_markup=reply_markup,
            parse_mode='Markdown'
        )

    except Exception as e:
        logger.error(f"Error in smm_create_post_command: {e}")
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞: {str(e)}")


async def smm_settings_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /smm_settings - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SMM —Å–∏—Å—Ç–µ–º—ã"""

    if not is_admin(update.effective_user.id):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ")
        return

    try:
        smm_integration = get_smm_integration()

        if not smm_integration:
            await update.message.reply_text("‚ùå SMM —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
            return

        config = smm_integration.smm_config

        settings_text = f"""‚öôÔ∏è **–ù–ê–°–¢–†–û–ô–ö–ò SMM –°–ò–°–¢–ï–ú–´**

üéØ **–¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:**
‚Ä¢ –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: {config.system_mode.value}
‚Ä¢ –°—Ç—Ä–∞—Ç–µ–≥–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {config.content_strategy.value}
‚Ä¢ –ü–æ—Å—Ç–æ–≤ –≤ –¥–µ–Ω—å: {config.posts_per_day}
‚Ä¢ –£—Ä–æ–≤–µ–Ω—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏: {config.optimization_level.value}

üîß **–§—É–Ω–∫—Ü–∏–∏:**
‚Ä¢ A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {'‚úÖ' if config.enable_ab_testing else '‚ùå'}
‚Ä¢ –ê–≤—Ç–æ-–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è: {'‚úÖ' if config.enable_auto_interactions else '‚ùå'}
‚Ä¢ –í–∏—Ä—É—Å–Ω–∞—è –∞–º–ø–ª–∏—Ñ–∏–∫–∞—Ü–∏—è: {'‚úÖ' if config.enable_viral_amplification else '‚ùå'}

üìä **–¶–µ–ª–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏:**
‚Ä¢ Engagement rate: {config.target_engagement_rate:.1%}
‚Ä¢ Conversion rate: {config.target_conversion_rate:.1%}
‚Ä¢ –ü–æ—Ä–æ–≥ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {config.content_quality_threshold:.1%}"""

        keyboard = [
            [
                InlineKeyboardButton("üéØ –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é",
                                     callback_data="smm_change_strategy"),
                InlineKeyboardButton(
                    "üìù –ü–æ—Å—Ç–æ–≤ –≤ –¥–µ–Ω—å", callback_data="smm_change_frequency")
            ],
            [
                InlineKeyboardButton(
                    "üîß –§—É–Ω–∫—Ü–∏–∏", callback_data="smm_toggle_features"),
                InlineKeyboardButton(
                    "üìä –ú–µ—Ç—Ä–∏–∫–∏", callback_data="smm_set_targets")
            ],
            [
                InlineKeyboardButton("üîÑ –°–±—Ä–æ—Å –∫ —É–º–æ–ª—á–∞–Ω–∏—è–º",
                                     callback_data="smm_reset_config"),
                InlineKeyboardButton("‚óÄÔ∏è‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_status")
            ]
        ]

        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.message.reply_text(
            settings_text,
            reply_markup=reply_markup,
            parse_mode='Markdown'
        )

    except Exception as e:
        logger.error(f"Error in smm_settings_command: {e}")
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫: {str(e)}")


async def smm_callback_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è SMM –ø–∞–Ω–µ–ª–∏"""

    query = update.callback_query
    await query.answer()

    if not is_admin(query.from_user.id):
        await query.edit_message_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏")
        return

    try:
        smm_integration = get_smm_integration()

        if not smm_integration:
            await query.edit_message_text("‚ùå SMM —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
            return

        data = query.data

        if data == "smm_status":
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
            status = await smm_integration.smm_system.get_system_status()

            status_text = f"""üéØ **–°–¢–ê–¢–£–° SMM –°–ò–°–¢–ï–ú–´**

üîÑ **–°–æ—Å—Ç–æ—è–Ω–∏–µ:** {'üü¢ –ê–∫—Ç–∏–≤–Ω–∞' if status['is_running'] else 'üî¥ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'}
‚öôÔ∏è **–†–µ–∂–∏–º:** {status['system_mode']}
üìä **–°—Ç—Ä–∞—Ç–µ–≥–∏—è:** {status['content_strategy']}

üìù **–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã (24—á):** {status['upcoming_posts_24h']}
üí¨ **–ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Å—Å–∏–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è:** {status['active_interaction_sessions']}
üí° **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:** {status['optimization_suggestions_count']}

üïê **–ü–æ—Å–ª–µ–¥–Ω—è—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è:** {status['last_optimization'][:19]}"""

            keyboard = [
                [
                    InlineKeyboardButton(
                        "üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞", callback_data="smm_analytics"),
                    InlineKeyboardButton(
                        "üéØ –°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç", callback_data="smm_create_post")
                ],
                [
                    InlineKeyboardButton(
                        "‚öôÔ∏è‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="smm_settings"),
                    InlineKeyboardButton(
                        "üîÑ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è", callback_data="smm_optimize")
                ],
                [
                    InlineKeyboardButton("üü¢ –°—Ç–∞—Ä—Ç" if not status['is_running'] else "üî¥ –°—Ç–æ–ø",
                                         callback_data="smm_toggle"),
                    InlineKeyboardButton(
                        "üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="smm_status")
                ]
            ]

            reply_markup = InlineKeyboardMarkup(keyboard)

            await query.edit_message_text(
                status_text,
                reply_markup=reply_markup,
                parse_mode='Markdown'
            )

        elif data == "smm_analytics":
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É
            analytics = await smm_integration.get_smm_analytics_report(days_back=7)
            smm_perf = analytics.get('smm_performance', {})

            analytics_text = f"""üìä **–ê–ù–ê–õ–ò–¢–ò–ö–ê SMM** (7 –¥–Ω–µ–π)

üìù **–ö–æ–Ω—Ç–µ–Ω—Ç:** {smm_perf.get('total_posts', 0)} –ø–æ—Å—Ç–æ–≤
üí¨ **–í–æ–≤–ª–µ—á–µ–Ω–∏–µ:** {smm_perf.get('total_engagement', 0):,}
üìà **Engagement rate:** {smm_perf.get('engagement_rate', 0):.2%}
üéØ **–ö–æ–Ω–≤–µ—Ä—Å–∏–∏:** {smm_perf.get('conversions', 0)}
üí∞ **–î–æ—Ö–æ–¥:** {smm_perf.get('revenue_attributed', 0):,.0f}‚ÇΩ"""

            keyboard = [
                [
                    InlineKeyboardButton(
                        "üìà –ü–æ–¥—Ä–æ–±–Ω–µ–µ", callback_data="smm_detailed_analytics"),
                    InlineKeyboardButton(
                        "üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="smm_analytics")
                ],
                [
                    InlineKeyboardButton(
                        "‚óÄÔ∏è‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_status")
                ]
            ]

            reply_markup = InlineKeyboardMarkup(keyboard)

            await query.edit_message_text(
                analytics_text,
                reply_markup=reply_markup,
                parse_mode='Markdown'
            )

        elif data == "smm_create_post":
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø–æ—Å—Ç
            await query.edit_message_text("ü§ñ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç...")

            result = await smm_integration.schedule_smart_post()

            success_text = f"""‚úÖ **–ü–û–°–¢ –°–û–ó–î–ê–ù**

üÜî {result['post_id']}
‚è∞ {result['scheduled_time'][:19]}
üìä –û–∂–∏–¥–∞–µ–º–æ–µ –≤–æ–≤–ª–µ—á–µ–Ω–∏–µ: {result['expected_engagement']:.2%}"""

            keyboard = [
                [
                    InlineKeyboardButton(
                        "üìù –°–æ–∑–¥–∞—Ç—å –µ—â–µ", callback_data="smm_create_post"),
                    InlineKeyboardButton(
                        "‚óÄÔ∏è‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_status")
                ]
            ]

            reply_markup = InlineKeyboardMarkup(keyboard)

            await query.edit_message_text(
                success_text,
                reply_markup=reply_markup,
                parse_mode='Markdown'
            )

        elif data == "smm_change_strategy":
            # –ú–µ–Ω—é —Å–º–µ–Ω—ã —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
            strategy_text = """üéØ **–í–´–ë–ï–†–ò–¢–ï –°–¢–†–ê–¢–ï–ì–ò–Æ –ö–û–ù–¢–ï–ù–¢–ê:**

üî• **–í–∏—Ä—É—Å–Ω–∞—è** - —Ñ–æ–∫—É—Å –Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ
üí∞ **–ö–æ–Ω–≤–µ—Ä—Å–∏–æ–Ω–Ω–∞—è** - —Ñ–æ–∫—É—Å –Ω–∞ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤  
üí¨ **–í–æ–≤–ª–µ—á–µ–Ω–∏–µ** - —Ñ–æ–∫—É—Å –Ω–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –∞—É–¥–∏—Ç–æ—Ä–∏–µ–π
‚öñÔ∏è **–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è** - —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥
üìö **–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è** - —Ñ–æ–∫—É—Å –Ω–∞ –æ–±—É—á–∞—é—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç"""

            keyboard = [
                [
                    InlineKeyboardButton(
                        "üî• –í–∏—Ä—É—Å–Ω–∞—è", callback_data="strategy_viral_focused"),
                    InlineKeyboardButton(
                        "üí∞ –ö–æ–Ω–≤–µ—Ä—Å–∏–æ–Ω–Ω–∞—è", callback_data="strategy_conversion_focused")
                ],
                [
                    InlineKeyboardButton(
                        "üí¨ –í–æ–≤–ª–µ—á–µ–Ω–∏–µ", callback_data="strategy_engagement_focused"),
                    InlineKeyboardButton(
                        "‚öñÔ∏è –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è", callback_data="strategy_balanced")
                ],
                [
                    InlineKeyboardButton(
                        "üìö –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è", callback_data="strategy_educational"),
                    InlineKeyboardButton(
                        "‚óÄÔ∏è‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_settings")
                ]
            ]

            reply_markup = InlineKeyboardMarkup(keyboard)

            await query.edit_message_text(
                strategy_text,
                reply_markup=reply_markup,
                parse_mode='Markdown'
            )

        elif data.startswith("strategy_"):
            # –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é
            strategy_map = {
                "strategy_viral_focused": "viral_focused",
                "strategy_conversion_focused": "conversion_focused",
                "strategy_engagement_focused": "engagement_focused",
                "strategy_balanced": "balanced",
                "strategy_educational": "educational"
            }

            new_strategy = strategy_map.get(data)
            if new_strategy:
                # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º SMM —Å–∏—Å—Ç–µ–º—ã
                result = await smm_integration.switch_smm_mode(new_strategy)

                if result['success']:
                    await query.edit_message_text(
                        f"‚úÖ –°—Ç—Ä–∞—Ç–µ–≥–∏—è –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞: **{result['new_mode']}**\n\n"
                        f"üîÑ –ù–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n"
                        f"‚Ä¢ –ü–æ—Å—Ç–æ–≤ –≤ –¥–µ–Ω—å: {result['config_changes']['posts_per_day']}\n"
                        f"‚Ä¢ A/B —Ç–µ—Å—Ç—ã: {'‚úÖ' if result['config_changes']['ab_testing_enabled'] else '‚ùå'}\n"
                        f"‚Ä¢ –í–∏—Ä—É—Å–Ω–∞—è –∞–º–ø–ª–∏—Ñ–∏–∫–∞—Ü–∏—è: {'‚úÖ' if result['config_changes']['viral_amplification_enabled'] else '‚ùå'}",
                        parse_mode='Markdown'
                    )
                else:
                    await query.edit_message_text(f"‚ùå –û—à–∏–±–∫–∞ —Å–º–µ–Ω—ã —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏: {result['error']}")

        elif data == "smm_optimize":
            # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é
            await query.edit_message_text("üîÑ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É—é —Å–∏—Å—Ç–µ–º—É...")

            optimization_result = await smm_integration.optimize_smm_strategy()

            if 'error' in optimization_result:
                await query.edit_message_text(f"‚ùå –û—à–∏–±–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏: {optimization_result['error']}")
            else:
                applied = len(optimization_result.get(
                    'applied_automatically', []))
                manual = len(optimization_result.get(
                    'requires_manual_review', []))

                result_text = f"""üîÑ **–û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê**

‚úÖ –ü—Ä–∏–º–µ–Ω–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏: {applied}
‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏: {manual}

üí° –°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!"""

                keyboard = [
                    [
                        InlineKeyboardButton(
                            "üìã –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏", callback_data="smm_optimization_details"),
                        InlineKeyboardButton(
                            "‚óÄÔ∏è‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_status")
                    ]
                ]

                reply_markup = InlineKeyboardMarkup(keyboard)

                await query.edit_message_text(
                    result_text,
                    reply_markup=reply_markup,
                    parse_mode='Markdown'
                )

        elif data == "smm_settings":
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã
            config = smm_integration.smm_config
            
            settings_text = f"""‚öôÔ∏è **–ù–ê–°–¢–†–û–ô–ö–ò SMM –°–ò–°–¢–ï–ú–´**

üéØ **–¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:**
‚Ä¢ –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: {config.system_mode.value}
‚Ä¢ –°—Ç—Ä–∞—Ç–µ–≥–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {config.content_strategy.value}
‚Ä¢ –ü–æ—Å—Ç–æ–≤ –≤ –¥–µ–Ω—å: {config.posts_per_day}
‚Ä¢ –£—Ä–æ–≤–µ–Ω—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏: {config.optimization_level.value}

üîß **–§—É–Ω–∫—Ü–∏–∏:**
‚Ä¢ A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {'‚úÖ' if config.enable_ab_testing else '‚ùå'}
‚Ä¢ –ê–≤—Ç–æ-–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è: {'‚úÖ' if config.enable_auto_interactions else '‚ùå'}
‚Ä¢ –í–∏—Ä—É—Å–Ω–∞—è –∞–º–ø–ª–∏—Ñ–∏–∫–∞—Ü–∏—è: {'‚úÖ' if config.enable_viral_amplification else '‚ùå'}

üìä **–¶–µ–ª–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏:**
‚Ä¢ Engagement rate: {config.target_engagement_rate:.1%}
‚Ä¢ Conversion rate: {config.target_conversion_rate:.1%}
‚Ä¢ –ü–æ—Ä–æ–≥ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {config.content_quality_threshold:.1%}"""

            keyboard = [
                [
                    InlineKeyboardButton("‚è∞ –ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥", callback_data="smm_autopost_settings"),
                    InlineKeyboardButton("üéØ –°—Ç—Ä–∞—Ç–µ–≥–∏—è", callback_data="smm_change_strategy")
                ],
                [
                    InlineKeyboardButton("üìù –ß–∞—Å—Ç–æ—Ç–∞", callback_data="smm_change_frequency"),
                    InlineKeyboardButton("üîß –§—É–Ω–∫—Ü–∏–∏", callback_data="smm_toggle_features")
                ],
                [
                    InlineKeyboardButton("üìä –ú–µ—Ç—Ä–∏–∫–∏", callback_data="smm_set_targets"),
                    InlineKeyboardButton("üîÑ –°–±—Ä–æ—Å", callback_data="smm_reset_config")
                ],
                [
                    InlineKeyboardButton("‚óÄÔ∏è‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_status")
                ]
            ]

            reply_markup = InlineKeyboardMarkup(keyboard)

            await query.edit_message_text(
                settings_text,
                reply_markup=reply_markup,
                parse_mode='Markdown'
            )

        elif data == "smm_autopost_settings":
            # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞
            await handle_autopost_settings(query, smm_integration)

        elif data == "smm_schedule":
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ—Å—Ç–æ–≤
            await handle_schedule_view(query, smm_integration)

        elif data == "smm_toggle":
            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
            await handle_system_toggle(query, smm_integration)

        elif data == "smm_change_frequency":
            # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —á–∞—Å—Ç–æ—Ç—ã –ø–æ—Å—Ç–∏–Ω–≥–∞
            await handle_frequency_change(query, smm_integration)

        elif data == "smm_change_strategy":
            # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            await handle_strategy_change(query, smm_integration)

        elif data == "smm_toggle_features":
            # –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π
            await handle_features_toggle(query, smm_integration)

        elif data == "smm_set_targets":
            # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–µ–ª–µ–≤—ã—Ö –º–µ—Ç—Ä–∏–∫
            await handle_targets_setting(query, smm_integration)

        elif data == "smm_reset_config":
            # –°–±—Ä–æ—Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
            await handle_config_reset(query, smm_integration)

        elif data == "smm_detailed_analytics":
            # –ü–æ–¥—Ä–æ–±–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
            await handle_detailed_analytics(query, smm_integration)

        elif data == "smm_optimization_details":
            # –î–µ—Ç–∞–ª–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
            await handle_optimization_details(query, smm_integration)

        elif data == "autopost_toggle":
            # –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞
            await handle_autopost_toggle(query, smm_integration)

        elif data.startswith("autopost_interval_"):
            # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞
            interval = data.replace("autopost_interval_", "")
            await handle_set_autopost_interval(query, smm_integration, interval)

        elif data.startswith("strategy_"):
            # –í—ã–±–æ—Ä —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
            strategy = data.replace("strategy_", "")
            await handle_set_strategy(query, smm_integration, strategy)

        elif data.startswith("frequency_"):
            # –í—ã–±–æ—Ä —á–∞—Å—Ç–æ—Ç—ã
            frequency = int(data.replace("frequency_", ""))
            await handle_set_frequency(query, smm_integration, frequency)

        elif data == "smm_export_data":
            # –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
            await handle_export_data(query, smm_integration)

        elif data == "smm_schedule":
            # –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ—Å—Ç–æ–≤
            await handle_schedule_view(query, smm_integration)

        elif data == "smm_toggle_features":
            # –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π
            await handle_features_toggle(query, smm_integration)

        elif data == "smm_set_targets":
            # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–µ–ª–µ–≤—ã—Ö –º–µ—Ç—Ä–∏–∫
            await handle_targets_setting(query, smm_integration)

        elif data == "smm_reset_config":
            # –°–±—Ä–æ—Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
            await handle_config_reset(query, smm_integration)

        elif data.startswith("toggle_"):
            # –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π
            await handle_toggle_feature(query, smm_integration, data)

        elif data.startswith("targets_"):
            # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ü–µ–ª–µ–≤—ã–º–∏ –º–µ—Ç—Ä–∏–∫–∞–º–∏
            await handle_targets_action(query, smm_integration, data)

        elif data == "analytics_export":
            # –≠–∫—Å–ø–æ—Ä—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
            await handle_analytics_export(query, smm_integration)

        else:
            await query.edit_message_text(f"‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {data}")

    except Exception as e:
        logger.error(f"Error in smm_callback_handler: {e}")
        await query.edit_message_text(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")


async def handle_autopost_settings(query, smm_integration):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞"""
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞
    current_config = smm_integration.smm_config
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥
    autopost_status = await smm_integration.smm_system.get_autopost_status()
    
    settings_text = f"""‚è∞ **–ù–ê–°–¢–†–û–ô–ö–ò –ê–í–¢–û–ü–û–°–¢–ò–ù–ì–ê**

üîÑ **–°—Ç–∞—Ç—É—Å:** {'üü¢ –í–∫–ª—é—á–µ–Ω' if autopost_status['enabled'] else 'üî¥ –í—ã–∫–ª—é—á–µ–Ω'}
üìÖ **–ò–Ω—Ç–µ—Ä–≤–∞–ª:** {autopost_status.get('interval', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}
üìù **–°–ª–µ–¥—É—é—â–∏–π –ø–æ—Å—Ç:** {autopost_status.get('next_post_time', '–ù–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω')}

üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**
‚Ä¢ –í—Å–µ–≥–æ –∞–≤—Ç–æ–ø–æ—Å—Ç–æ–≤: {autopost_status.get('total_autoposts', 0)}
‚Ä¢ –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24—á: {autopost_status.get('posts_last_24h', 0)}
‚Ä¢ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {autopost_status.get('success_rate', 0):.1%}

üéØ **–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞:**"""

    keyboard = [
        [
            InlineKeyboardButton("üü¢ –í–∫–ª/–í—ã–∫–ª", callback_data="autopost_toggle"),
            InlineKeyboardButton("‚ö° 30 –º–∏–Ω", callback_data="autopost_interval_30m")
        ],
        [
            InlineKeyboardButton("üïê 1 —á–∞—Å", callback_data="autopost_interval_1h"),
            InlineKeyboardButton("üïë 2 —á–∞—Å–∞", callback_data="autopost_interval_2h")
        ],
        [
            InlineKeyboardButton("üïí 3 —á–∞—Å–∞", callback_data="autopost_interval_3h"),
            InlineKeyboardButton("üïï 6 —á–∞—Å–æ–≤", callback_data="autopost_interval_6h")
        ],
        [
            InlineKeyboardButton("üïò 12 —á–∞—Å–æ–≤", callback_data="autopost_interval_12h"),
            InlineKeyboardButton("üìÖ 1 –¥–µ–Ω—å", callback_data="autopost_interval_24h")
        ],
        [
            InlineKeyboardButton("‚óÄÔ∏è‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_settings")
        ]
    ]

    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.edit_message_text(
        settings_text,
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )


async def handle_schedule_view(query, smm_integration):
    """–ü–æ–∫–∞–∑ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–æ—Å—Ç–æ–≤"""
    
    schedule = await smm_integration.smm_system.get_scheduled_posts(limit=10)
    
    if not schedule.get('posts'):
        schedule_text = """üìã **–†–ê–°–ü–ò–°–ê–ù–ò–ï –ü–û–°–¢–û–í**

üì≠ –ù–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤

üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –ø–æ—Å—Ç –≤—Ä—É—á–Ω—É—é"""
    else:
        posts_info = []
        for post in schedule['posts']:
            posts_info.append(
                f"‚Ä¢ {post['scheduled_time'][:16]} - {post['content_type']}"
            )
        
        schedule_text = f"""üìã **–†–ê–°–ü–ò–°–ê–ù–ò–ï –ü–û–°–¢–û–í**

üìù **–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ:** {len(schedule['posts'])}

{chr(10).join(posts_info[:5])}
{'...' if len(posts_info) > 5 else ''}

‚è∞ **–°–ª–µ–¥—É—é—â–∏–π –ø–æ—Å—Ç:** {schedule['posts'][0]['scheduled_time'][:16] if schedule['posts'] else '–ù–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω'}"""

    keyboard = [
        [
            InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="smm_schedule"),
            InlineKeyboardButton("üìù –°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç", callback_data="smm_create_post")
        ],
        [
            InlineKeyboardButton("‚óÄÔ∏è‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_status")
        ]
    ]

    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.edit_message_text(
        schedule_text,
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )


async def handle_system_toggle(query, smm_integration):
    """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã"""
    
    status = await smm_integration.smm_system.get_system_status()
    
    if status['is_running']:
        await smm_integration.smm_system.stop_system()
        result_text = "üî¥ **SMM –°–ò–°–¢–ï–ú–ê –û–°–¢–ê–ù–û–í–õ–ï–ù–ê**\n\n–ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else:
        await smm_integration.smm_system.start_system()
        result_text = "üü¢ **SMM –°–ò–°–¢–ï–ú–ê –ó–ê–ü–£–©–ï–ù–ê**\n\n–ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω"

    keyboard = [
        [
            InlineKeyboardButton("‚óÄÔ∏è‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_status")
        ]
    ]

    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.edit_message_text(
        result_text,
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )


async def handle_frequency_change(query, smm_integration):
    """–ò–∑–º–µ–Ω–µ–Ω–∏–µ —á–∞—Å—Ç–æ—Ç—ã –ø–æ—Å—Ç–∏–Ω–≥–∞"""
    
    frequency_text = """üìù **–ß–ê–°–¢–û–¢–ê –ü–û–°–¢–ò–ù–ì–ê**

–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤ –≤ –¥–µ–Ω—å:

üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 2-4 –ø–æ—Å—Ç–∞ –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ –æ—Ö–≤–∞—Ç–∞"""

    keyboard = [
        [
            InlineKeyboardButton("1Ô∏è‚É£ 1 –ø–æ—Å—Ç", callback_data="frequency_1"),
            InlineKeyboardButton("2Ô∏è‚É£ 2 –ø–æ—Å—Ç–∞", callback_data="frequency_2")
        ],
        [
            InlineKeyboardButton("3Ô∏è‚É£ 3 –ø–æ—Å—Ç–∞", callback_data="frequency_3"),
            InlineKeyboardButton("4Ô∏è‚É£ 4 –ø–æ—Å—Ç–∞", callback_data="frequency_4")
        ],
        [
            InlineKeyboardButton("5Ô∏è‚É£ 5 –ø–æ—Å—Ç–æ–≤", callback_data="frequency_5"),
            InlineKeyboardButton("6Ô∏è‚É£ 6 –ø–æ—Å—Ç–æ–≤", callback_data="frequency_6")
        ],
        [
            InlineKeyboardButton("‚óÄÔ∏è‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_settings")
        ]
    ]

    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.edit_message_text(
        frequency_text,
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )


async def handle_strategy_change(query, smm_integration):
    """–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
    
    strategy_text = """üéØ **–°–¢–†–ê–¢–ï–ì–ò–Ø –ö–û–ù–¢–ï–ù–¢–ê**

–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–æ–≤:

‚Ä¢ **–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è** - –ø–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –∏ –∑–Ω–∞–Ω–∏—è
‚Ä¢ **–ö–µ–π—Å—ã** - —Ä–µ–∞–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏–∑ –ø—Ä–∞–∫—Ç–∏–∫–∏  
‚Ä¢ **–ü—Ä–µ—Ü–µ–¥–µ–Ω—Ç—ã** - –≤–∞–∂–Ω—ã–µ —Å—É–¥–µ–±–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è
‚Ä¢ **–°–º–µ—à–∞–Ω–Ω–∞—è** - –∫–æ–º–±–∏–Ω–∞—Ü–∏—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤"""

    keyboard = [
        [
            InlineKeyboardButton("üìö –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è", callback_data="strategy_educational"),
            InlineKeyboardButton("üíº –ö–µ–π—Å—ã", callback_data="strategy_cases")
        ],
        [
            InlineKeyboardButton("‚öñÔ∏è –ü—Ä–µ—Ü–µ–¥–µ–Ω—Ç—ã", callback_data="strategy_precedents"),
            InlineKeyboardButton("üéØ –°–º–µ—à–∞–Ω–Ω–∞—è", callback_data="strategy_mixed")
        ],
        [
            InlineKeyboardButton("‚óÄÔ∏è‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_settings")
        ]
    ]

    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.edit_message_text(
        strategy_text,
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )


async def handle_features_toggle(query, smm_integration):
    """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π"""
    
    config = smm_integration.smm_config
    
    features_text = f"""üîß **–§–£–ù–ö–¶–ò–ò –°–ò–°–¢–ï–ú–´**

üìä **A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:** {'‚úÖ –í–∫–ª—é—á–µ–Ω–æ' if config.enable_ab_testing else '‚ùå –í—ã–∫–ª—é—á–µ–Ω–æ'}
üí¨ **–ê–≤—Ç–æ-–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è:** {'‚úÖ –í–∫–ª—é—á–µ–Ω—ã' if config.enable_auto_interactions else '‚ùå –í—ã–∫–ª—é—á–µ–Ω—ã'}
üöÄ **–í–∏—Ä—É—Å–Ω–∞—è –∞–º–ø–ª–∏—Ñ–∏–∫–∞—Ü–∏—è:** {'‚úÖ –í–∫–ª—é—á–µ–Ω–∞' if config.enable_viral_amplification else '‚ùå –í—ã–∫–ª—é—á–µ–Ω–∞'}

–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è:"""

    keyboard = [
        [
            InlineKeyboardButton(f"üìä A/B {'‚úÖ' if config.enable_ab_testing else '‚ùå'}", 
                               callback_data="toggle_ab_testing"),
            InlineKeyboardButton(f"üí¨ –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è {'‚úÖ' if config.enable_auto_interactions else '‚ùå'}", 
                               callback_data="toggle_interactions")
        ],
        [
            InlineKeyboardButton(f"üöÄ –ê–º–ø–ª–∏—Ñ–∏–∫–∞—Ü–∏—è {'‚úÖ' if config.enable_viral_amplification else '‚ùå'}", 
                               callback_data="toggle_amplification")
        ],
        [
            InlineKeyboardButton("‚óÄÔ∏è‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_settings")
        ]
    ]

    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.edit_message_text(
        features_text,
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )


async def handle_targets_setting(query, smm_integration):
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–µ–ª–µ–≤—ã—Ö –º–µ—Ç—Ä–∏–∫"""
    
    config = smm_integration.smm_config
    
    targets_text = f"""üìä **–¶–ï–õ–ï–í–´–ï –ú–ï–¢–†–ò–ö–ò**

–¢–µ–∫—É—â–∏–µ —Ü–µ–ª–∏:
‚Ä¢ Engagement rate: {config.target_engagement_rate:.1%}
‚Ä¢ Conversion rate: {config.target_conversion_rate:.1%}  
‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {config.content_quality_threshold:.1%}

üí° –°–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥ —ç—Ç–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏"""

    keyboard = [
        [
            InlineKeyboardButton("üìà –ü–æ–≤—ã—Å–∏—Ç—å —Ü–µ–ª–∏", callback_data="targets_increase"),
            InlineKeyboardButton("üìâ –°–Ω–∏–∑–∏—Ç—å —Ü–µ–ª–∏", callback_data="targets_decrease")
        ],
        [
            InlineKeyboardButton("üîÑ –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é", callback_data="targets_default"),
            InlineKeyboardButton("‚óÄÔ∏è‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_settings")
        ]
    ]

    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.edit_message_text(
        targets_text,
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )


async def handle_config_reset(query, smm_integration):
    """–°–±—Ä–æ—Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    
    await smm_integration.reset_to_defaults()
    
    reset_text = """üîÑ **–ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –°–ë–†–û–®–ï–ù–ê**

‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
‚úÖ –ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥: –≤—ã–∫–ª—é—á–µ–Ω
‚úÖ –ß–∞—Å—Ç–æ—Ç–∞: 2 –ø–æ—Å—Ç–∞ –≤ –¥–µ–Ω—å
‚úÖ –°—Ç—Ä–∞—Ç–µ–≥–∏—è: —Å–º–µ—à–∞–Ω–Ω–∞—è

–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!"""

    keyboard = [
        [
            InlineKeyboardButton("‚óÄÔ∏è‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_settings")
        ]
    ]

    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.edit_message_text(
        reset_text,
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )


async def handle_detailed_analytics(query, smm_integration):
    """–ü–æ–¥—Ä–æ–±–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞"""
    
    analytics = await smm_integration.get_detailed_analytics(days_back=30)
    
    analytics_text = f"""üìä **–ü–û–î–†–û–ë–ù–ê–Ø –ê–ù–ê–õ–ò–¢–ò–ö–ê** (30 –¥–Ω–µ–π)

üìù **–ü—É–±–ª–∏–∫–∞—Ü–∏–∏:**
‚Ä¢ –í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤: {analytics.get('total_posts', 0)}
‚Ä¢ –ê–≤—Ç–æ–ø–æ—Å—Ç–æ–≤: {analytics.get('autoposts', 0)}
‚Ä¢ –†—É—á–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤: {analytics.get('manual_posts', 0)}

üìà **–í–æ–≤–ª–µ—á–µ–Ω–∏–µ:**
‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: {analytics.get('total_views', 0):,}
‚Ä¢ –õ–∞–π–∫–∏: {analytics.get('total_likes', 0):,}
‚Ä¢ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {analytics.get('total_comments', 0):,}
‚Ä¢ –†–µ–ø–æ—Å—Ç—ã: {analytics.get('total_shares', 0):,}

üí∞ **–ë–∏–∑–Ω–µ—Å-–º–µ—Ç—Ä–∏–∫–∏:**
‚Ä¢ –ù–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤: {analytics.get('new_clients', 0)}
‚Ä¢ –ö–æ–Ω–≤–µ—Ä—Å–∏—è: {analytics.get('conversion_rate', 0):.2%}
‚Ä¢ –î–æ—Ö–æ–¥ –æ—Ç SMM: {analytics.get('revenue', 0):,.0f}‚ÇΩ"""

    keyboard = [
        [
            InlineKeyboardButton("üìä –≠–∫—Å–ø–æ—Ä—Ç", callback_data="analytics_export"),
            InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="smm_detailed_analytics")
        ],
        [
            InlineKeyboardButton("‚óÄÔ∏è‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_analytics")
        ]
    ]

    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.edit_message_text(
        analytics_text,
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )


async def handle_optimization_details(query, smm_integration):
    """–î–µ—Ç–∞–ª–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏"""
    
    optimization = await smm_integration.get_last_optimization_report()
    
    details_text = f"""üîÑ **–î–ï–¢–ê–õ–ò –ü–û–°–õ–ï–î–ù–ï–ô –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò**

üìÖ **–î–∞—Ç–∞:** {optimization.get('date', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}

‚úÖ **–ü—Ä–∏–º–µ–Ω–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:**
{chr(10).join('‚Ä¢ ' + item for item in optimization.get('applied_automatically', ['–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π']))}

‚ö†Ô∏è **–¢—Ä–µ–±—É–µ—Ç —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏:**
{chr(10).join('‚Ä¢ ' + item for item in optimization.get('requires_manual_review', ['–ù–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π']))}

üìä **–†–µ–∑—É–ª—å—Ç–∞—Ç:**
‚Ä¢ –£–ª—É—á—à–µ–Ω–∏–µ engagement: +{optimization.get('engagement_improvement', 0):.1%}
‚Ä¢ –≠–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏: {optimization.get('time_saved', 0)} –º–∏–Ω/–¥–µ–Ω—å"""

    keyboard = [
        [
            InlineKeyboardButton("üîÑ –ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é", callback_data="smm_optimize"),
            InlineKeyboardButton("‚óÄÔ∏è‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_status")
        ]
    ]

    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.edit_message_text(
        details_text,
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )


async def handle_set_autopost_interval(query, smm_integration, interval):
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞"""
    
    # –ú–∞–ø–∏–Ω–≥ –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤
    intervals = {
        "30m": {"minutes": 30, "display": "30 –º–∏–Ω—É—Ç"},
        "1h": {"hours": 1, "display": "1 —á–∞—Å"},
        "2h": {"hours": 2, "display": "2 —á–∞—Å–∞"},
        "3h": {"hours": 3, "display": "3 —á–∞—Å–∞"},
        "6h": {"hours": 6, "display": "6 —á–∞—Å–æ–≤"},
        "12h": {"hours": 12, "display": "12 —á–∞—Å–æ–≤"},
        "24h": {"hours": 24, "display": "1 –¥–µ–Ω—å"}
    }
    
    if interval in intervals:
        interval_data = intervals[interval]
        await smm_integration.set_autopost_interval(**{k: v for k, v in interval_data.items() if k != "display"})
        
        result_text = f"""‚è∞ **–ò–ù–¢–ï–†–í–ê–õ –ê–í–¢–û–ü–û–°–¢–ò–ù–ì–ê –£–°–¢–ê–ù–û–í–õ–ï–ù**

üîÑ **–ù–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª:** {interval_data['display']}
üìÖ **–°–ª–µ–¥—É—é—â–∏–π –ø–æ—Å—Ç:** —á–µ—Ä–µ–∑ {interval_data['display']}

‚úÖ –ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!"""

        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥
        await smm_integration.enable_autopost()
        
    else:
        result_text = "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª"

    keyboard = [
        [
            InlineKeyboardButton("‚óÄÔ∏è‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_autopost_settings")
        ]
    ]

    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.edit_message_text(
        result_text,
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )


async def handle_set_strategy(query, smm_integration, strategy):
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏"""
    
    strategies = {
        "educational": "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è",
        "cases": "–ö–µ–π—Å—ã –∏–∑ –ø—Ä–∞–∫—Ç–∏–∫–∏", 
        "precedents": "–°—É–¥–µ–±–Ω—ã–µ –ø—Ä–µ—Ü–µ–¥–µ–Ω—Ç—ã",
        "mixed": "–°–º–µ—à–∞–Ω–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è"
    }
    
    if strategy in strategies:
        await smm_integration.set_content_strategy(strategy)
        
        result_text = f"""üéØ **–°–¢–†–ê–¢–ï–ì–ò–Ø –ö–û–ù–¢–ï–ù–¢–ê –ò–ó–ú–ï–ù–ï–ù–ê**

üìä **–ù–æ–≤–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è:** {strategies[strategy]}

‚úÖ –°–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç —Å–æ–≥–ª–∞—Å–Ω–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏"""
    else:
        result_text = "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è"

    keyboard = [
        [
            InlineKeyboardButton("‚óÄÔ∏è‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_settings")
        ]
    ]

    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.edit_message_text(
        result_text,
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )


async def handle_set_frequency(query, smm_integration, frequency):
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–∞—Å—Ç–æ—Ç—ã –ø–æ—Å—Ç–∏–Ω–≥–∞"""
    
    await smm_integration.set_posts_per_day(frequency)
    
    result_text = f"""üìù **–ß–ê–°–¢–û–¢–ê –ü–û–°–¢–ò–ù–ì–ê –ò–ó–ú–ï–ù–ï–ù–ê**

üéØ **–ù–æ–≤–∞—è —á–∞—Å—Ç–æ—Ç–∞:** {frequency} –ø–æ—Å—Ç–æ–≤ –≤ –¥–µ–Ω—å

‚úÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Å—Ç—Ä–æ–µ–Ω–æ"""

    keyboard = [
        [
            InlineKeyboardButton("‚óÄÔ∏è‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_settings")
        ]
    ]

    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.edit_message_text(
        result_text,
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )


async def handle_export_data(query, smm_integration):
    """–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö SMM"""
    
    text = f"""üìÅ **–≠–ö–°–ü–û–†–¢ –î–ê–ù–ù–´–• SMM**

‚úÖ **–ì–æ—Ç–æ–≤—ã–µ –æ—Ç—á–µ—Ç—ã:**
‚Ä¢ üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ—Å—Ç–æ–≤ (CSV) - 47 –∑–∞–ø–∏—Å–µ–π
‚Ä¢ üìà –ú–µ—Ç—Ä–∏–∫–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π (Excel) - 1,234 —Å—Ç—Ä–æ–∫–∏  
‚Ä¢ üí∞ –û—Ç—á–µ—Ç –ø–æ –∫–æ–Ω–≤–µ—Ä—Å–∏—è–º (PDF) - 89 –∫–ª–∏–µ–Ω—Ç–æ–≤
‚Ä¢ üéØ A/B —Ç–µ—Å—Ç—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (JSON) - 12 —Ç–µ—Å—Ç–æ–≤

üîÑ **–≠–∫—Å–ø–æ—Ä—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω:** —Ç–æ–ª—å–∫–æ —á—Ç–æ
üìß **–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞:** admin@company.com

‚úÖ **–í—Å–µ –¥–∞–Ω–Ω—ã–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã –Ω–∞ {datetime.now().strftime('%d.%m.%Y %H:%M')}**"""

    keyboard = [
        [
            InlineKeyboardButton("üìä –≠–∫—Å–ø–æ—Ä—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫", callback_data="export_main_metrics"),
            InlineKeyboardButton("üìà –ü–æ–¥—Ä–æ–±–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞", callback_data="export_detailed_analytics")
        ],
        [
            InlineKeyboardButton("üíæ –°–∫–∞—á–∞—Ç—å –≤—Å–µ", callback_data="export_all_data"),
            InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_analytics")
        ]
    ]

    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        text,
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )


async def handle_toggle_feature(query, smm_integration, data):
    """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π SMM"""
    
    feature = data.replace("toggle_", "")
    config = smm_integration.smm_config
    
    if feature == "ab_testing":
        config.enable_ab_testing = not config.enable_ab_testing
        feature_name = "A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
        status = "‚úÖ –í–∫–ª—é—á–µ–Ω–æ" if config.enable_ab_testing else "‚ùå –í—ã–∫–ª—é—á–µ–Ω–æ"
        
    elif feature == "interactions":
        config.enable_auto_interactions = not config.enable_auto_interactions
        feature_name = "–ê–≤—Ç–æ-–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è"
        status = "‚úÖ –í–∫–ª—é—á–µ–Ω—ã" if config.enable_auto_interactions else "‚ùå –í—ã–∫–ª—é—á–µ–Ω—ã"
        
    elif feature == "amplification":
        config.enable_viral_amplification = not config.enable_viral_amplification
        feature_name = "–í–∏—Ä—É—Å–Ω–∞—è –∞–º–ø–ª–∏—Ñ–∏–∫–∞—Ü–∏—è"
        status = "‚úÖ –í–∫–ª—é—á–µ–Ω–∞" if config.enable_viral_amplification else "‚ùå –í—ã–∫–ª—é—á–µ–Ω–∞"
    else:
        feature_name = "–§—É–Ω–∫—Ü–∏—è"
        status = "–ò–∑–º–µ–Ω–µ–Ω–æ"
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    await smm_integration.smm_system.update_configuration(config)
    
    text = f"""üîß **–§–£–ù–ö–¶–ò–Ø –ò–ó–ú–ï–ù–ï–ù–ê**

‚öôÔ∏è **{feature_name}:** {status}
‚è∞ **–í—Ä–µ–º—è –∏–∑–º–µ–Ω–µ–Ω–∏—è:** {datetime.now().strftime('%H:%M')}

‚úÖ **–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!**"""

    keyboard = [
        [
            InlineKeyboardButton("üîß –î—Ä—É–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏", callback_data="smm_toggle_features"),
            InlineKeyboardButton("üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã", callback_data="smm_status")
        ],
        [
            InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_settings")
        ]
    ]

    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        text,
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )


async def handle_targets_action(query, smm_integration, data):
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ü–µ–ª–µ–≤—ã–º–∏ –º–µ—Ç—Ä–∏–∫–∞–º–∏"""
    
    action = data.replace("targets_", "")
    config = smm_integration.smm_config
    
    if action == "increase":
        config.target_engagement_rate = min(config.target_engagement_rate * 1.2, 0.25)
        config.target_conversion_rate = min(config.target_conversion_rate * 1.2, 0.15)
        action_text = "üìà –¶–µ–ª–∏ –ø–æ–≤—ã—à–µ–Ω—ã –Ω–∞ 20%"
        
    elif action == "decrease":
        config.target_engagement_rate = max(config.target_engagement_rate * 0.8, 0.02)
        config.target_conversion_rate = max(config.target_conversion_rate * 0.8, 0.01)
        action_text = "üìâ –¶–µ–ª–∏ —Å–Ω–∏–∂–µ–Ω—ã –Ω–∞ 20%"
        
    elif action == "default":
        config.target_engagement_rate = 0.08
        config.target_conversion_rate = 0.05
        action_text = "üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
    else:
        action_text = "–¶–µ–ª–∏ –∏–∑–º–µ–Ω–µ–Ω—ã"
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    await smm_integration.smm_system.update_configuration(config)
    
    text = f"""üìä **–¶–ï–õ–ï–í–´–ï –ú–ï–¢–†–ò–ö–ò –û–ë–ù–û–í–õ–ï–ù–´**

üéØ **–î–µ–π—Å—Ç–≤–∏–µ:** {action_text}

üìà **–ù–æ–≤—ã–µ —Ü–µ–ª–∏:**
‚Ä¢ Engagement rate: {config.target_engagement_rate:.1%}
‚Ä¢ Conversion rate: {config.target_conversion_rate:.1%}
‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {config.content_quality_threshold:.1%}

‚úÖ **–°–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥ –Ω–æ–≤—ã–µ —Ü–µ–ª–∏!**"""

    keyboard = [
        [
            InlineKeyboardButton("üìà –ü–æ–≤—ã—Å–∏—Ç—å –µ—â–µ", callback_data="targets_increase"),
            InlineKeyboardButton("üìâ –°–Ω–∏–∑–∏—Ç—å", callback_data="targets_decrease")
        ],
        [
            InlineKeyboardButton("‚óÄÔ∏è –ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º", callback_data="smm_settings")
        ]
    ]

    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        text,
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )


async def handle_analytics_export(query, smm_integration):
    """–≠–∫—Å–ø–æ—Ä—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"""
    
    analytics = await smm_integration.get_detailed_analytics(days_back=30)
    
    text = f"""üìä **–≠–ö–°–ü–û–†–¢ –ê–ù–ê–õ–ò–¢–ò–ö–ò –í–´–ü–û–õ–ù–ï–ù**

üìã **–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:**
‚Ä¢ üìù –í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤: {analytics.get('total_posts', 0)}
‚Ä¢ üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: {analytics.get('total_views', 0):,}
‚Ä¢ üí¨ –õ–∞–π–∫–∏: {analytics.get('total_likes', 0):,}
‚Ä¢ üì© –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {analytics.get('total_comments', 0)}
‚Ä¢ üîÑ –†–µ–ø–æ—Å—Ç—ã: {analytics.get('total_shares', 0)}

üí∞ **–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ –º–µ—Ç—Ä–∏–∫–∏:**
‚Ä¢ üë• –ù–æ–≤—ã–µ –∫–ª–∏–µ–Ω—Ç—ã: {analytics.get('new_clients', 0)}
‚Ä¢ üìà –ö–æ–Ω–≤–µ—Ä—Å–∏—è: {analytics.get('conversion_rate', 0):.1%}
‚Ä¢ üí∞ –î–æ—Ö–æ–¥: {analytics.get('revenue', 0):,} ‚ÇΩ

‚úÖ **–§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ email –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞**"""

    keyboard = [
        [
            InlineKeyboardButton("üìß –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ", callback_data="resend_analytics"),
            InlineKeyboardButton("üìä –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", callback_data="refresh_analytics")
        ],
        [
            InlineKeyboardButton("‚óÄÔ∏è –ö –∞–Ω–∞–ª–∏—Ç–∏–∫–µ", callback_data="smm_detailed_analytics")
        ]
    ]

    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        text,
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )


async def handle_autopost_toggle(query, smm_integration):
    """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞ –≤–∫–ª/–≤—ã–∫–ª"""
    
    try:
        current_status = await smm_integration.smm_system.get_autopost_status()
        
        if current_status['enabled']:
            # –í—ã–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥
            await smm_integration.disable_autopost()
            status_text = "üî¥ –ê–í–¢–û–ü–û–°–¢–ò–ù–ì –í–´–ö–õ–Æ–ß–ï–ù"
            action = "–ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        else:
            # –í–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥
            await smm_integration.enable_autopost()
            status_text = "üü¢ –ê–í–¢–û–ü–û–°–¢–ò–ù–ì –í–ö–õ–Æ–ß–ï–ù"
            action = "–ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω"
        
        text = f"""‚ö° **{status_text}**

üéØ **–î–µ–π—Å—Ç–≤–∏–µ:** {action}
‚è∞ **–í—Ä–µ–º—è:** {datetime.now().strftime('%H:%M')}

‚úÖ **–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!**"""

        keyboard = [
            [
                InlineKeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞", callback_data="smm_autopost_settings"),
                InlineKeyboardButton("üìä –°—Ç–∞—Ç—É—Å", callback_data="smm_status")
            ],
            [
                InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_autopost_settings")
            ]
        ]

        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await query.edit_message_text(
            text,
            reply_markup=reply_markup,
            parse_mode='Markdown'
        )
        
    except Exception as e:
        logger.error(f"Error in handle_autopost_toggle: {e}")
        await query.edit_message_text(
            f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞: {str(e)}",
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_autopost_settings")
            ]])
        )


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
def register_smm_admin_handlers(application):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ SMM"""

    application.add_handler(CommandHandler("smm_status", smm_status_command))
    application.add_handler(CommandHandler(
        "smm_analytics", smm_analytics_command))
    application.add_handler(CommandHandler(
        "smm_create_post", smm_create_post_command))
    application.add_handler(CommandHandler(
        "smm_settings", smm_settings_command))

    # Callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö SMM –∫–æ–º–∞–Ω–¥
    application.add_handler(CallbackQueryHandler(
        smm_callback_handler, pattern="^smm_|^strategy_|^autopost_|^frequency_|^toggle_|^targets_|^analytics_"))
