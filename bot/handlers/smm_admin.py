"""
üéõÔ∏è SMM ADMIN PANEL
Administrative commands for Professional SMM System management
"""

import logging
import json
from datetime import datetime, timedelta
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, CommandHandler, CallbackQueryHandler

from ..services.smm_integration import get_smm_integration

logger = logging.getLogger(__name__)

# –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ (–¥–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–π Telegram ID)
ADMIN_IDS = [
    343688708,  # Egor D. - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –±–æ—Ç–∞
    439952839,  # –î–º–∏—Ç—Ä–∏–π –ù–æ—Å–æ–≤ - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –±–æ—Ç–∞
]


def is_admin(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º"""
    return user_id in ADMIN_IDS


async def smm_status_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /smm_status - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å SMM —Å–∏—Å—Ç–µ–º—ã"""

    if not is_admin(update.effective_user.id):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ")
        return

    try:
        smm_integration = get_smm_integration()

        if not smm_integration:
            await update.message.reply_text("‚ùå SMM —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
            return

        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
        status = await smm_integration.smm_system.get_system_status()

        status_text = f"""üéØ **–°–¢–ê–¢–£–° SMM –°–ò–°–¢–ï–ú–´**

üîÑ **–°–æ—Å—Ç–æ—è–Ω–∏–µ:** {'üü¢ –ê–∫—Ç–∏–≤–Ω–∞' if status['is_running'] else 'üî¥ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'}
‚öôÔ∏è **–†–µ–∂–∏–º:** {status['system_mode']}
üìä **–°—Ç—Ä–∞—Ç–µ–≥–∏—è:** {status['content_strategy']}

üìù **–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã (24—á):** {status['upcoming_posts_24h']}
üí¨ **–ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Å—Å–∏–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è:** {status['active_interaction_sessions']}
üí° **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:** {status['optimization_suggestions_count']}

üïê **–ü–æ—Å–ª–µ–¥–Ω—è—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è:** {status['last_optimization'][:19]}

üéõÔ∏è **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:**"""

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        keyboard = [
            [
                InlineKeyboardButton(
                    "üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞", callback_data="smm_analytics"),
                InlineKeyboardButton(
                    "üéØ –°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç", callback_data="smm_create_post")
            ],
            [
                InlineKeyboardButton(
                    "‚öôÔ∏è‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="smm_settings"),
                InlineKeyboardButton(
                    "üîÑ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è", callback_data="smm_optimize")
            ],
            [
                InlineKeyboardButton("üü¢ –°—Ç–∞—Ä—Ç" if not status['is_running'] else "üî¥ –°—Ç–æ–ø",
                                     callback_data="smm_toggle"),
                InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="smm_status")
            ]
        ]

        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.message.reply_text(
            status_text,
            reply_markup=reply_markup,
            parse_mode='Markdown'
        )

    except Exception as e:
        logger.error(f"Error in smm_status_command: {e}")
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {str(e)}")


async def smm_analytics_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /smm_analytics - –ø–æ–∫–∞–∑–∞—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É"""

    if not is_admin(update.effective_user.id):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ")
        return

    try:
        smm_integration = get_smm_integration()

        if not smm_integration:
            await update.message.reply_text("‚ùå SMM —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
            return

        # –ü–æ–ª—É—á–∞–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
        analytics = await smm_integration.get_smm_analytics_report(days_back=7)

        if 'error' in analytics:
            await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: {analytics['error']}")
            return

        smm_perf = analytics.get('smm_performance', {})
        bot_integration = analytics.get('bot_integration', {})

        analytics_text = f"""üìä **–ê–ù–ê–õ–ò–¢–ò–ö–ê SMM –°–ò–°–¢–ï–ú–´** (7 –¥–Ω–µ–π)

üìù **–ö–æ–Ω—Ç–µ–Ω—Ç:**
‚Ä¢ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –ø–æ—Å—Ç–æ–≤: {smm_perf.get('total_posts', 0)}
‚Ä¢ –û–±—â–µ–µ –≤–æ–≤–ª–µ—á–µ–Ω–∏–µ: {smm_perf.get('total_engagement', 0):,}
‚Ä¢ –°—Ä–µ–¥–Ω–∏–π engagement rate: {smm_perf.get('engagement_rate', 0):.2%}
‚Ä¢ –í–∏—Ä—É—Å–Ω—ã–µ —Ö–∏—Ç—ã: {smm_perf.get('viral_hits', 0)}

üéØ **–ö–æ–Ω–≤–µ—Ä—Å–∏–∏:**
‚Ä¢ –í—Å–µ–≥–æ –∫–æ–Ω–≤–µ—Ä—Å–∏–π: {smm_perf.get('conversions', 0)}
‚Ä¢ Conversion rate: {smm_perf.get('conversion_rate', 0):.2%}
‚Ä¢ –ê—Ç—Ä–∏–±—É—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Ö–æ–¥: {smm_perf.get('revenue_attributed', 0):,.0f}‚ÇΩ

üìà **–†–æ—Å—Ç –∞—É–¥–∏—Ç–æ—Ä–∏–∏:** {smm_perf.get('audience_growth', 0):+.1%}

ü§ñ **–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –±–æ—Ç–æ–º:**
‚Ä¢ –ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–∑ –∫–∞–Ω–∞–ª–∞: {bot_integration.get('new_users_from_channel', 0)}
‚Ä¢ –ó–∞–ø—Ä–æ—Å—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π: {bot_integration.get('consultations_requested', 0)}
‚Ä¢ –ö–æ–Ω–≤–µ—Ä—Å–∏—è –∫–∞–Ω–∞–ª‚Üí–±–æ—Ç: {bot_integration.get('conversion_rate_channel_to_bot', 0):.1%}

üî• **–¢–æ–ø —Ç–∏–ø—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞:**"""

        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ø —Ç–∏–ø—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        top_types = smm_perf.get('top_content_types', [])
        for i, content_type in enumerate(top_types[:3], 1):
            analytics_text += f"\n{i}. {content_type}"

        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        recommendations = analytics.get('recommendations', [])
        if recommendations:
            analytics_text += "\n\nüí° **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**"
            for i, rec in enumerate(recommendations[:3], 1):
                rec_title = rec.get('title', '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è')
                analytics_text += f"\n{i}. {rec_title}"

        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –æ–ø—Ü–∏—è–º–∏
        keyboard = [
            [
                InlineKeyboardButton(
                    "üìà –î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞", callback_data="smm_detailed_analytics"),
                InlineKeyboardButton("üìä –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö",
                                     callback_data="smm_export_data")
            ],
            [
                InlineKeyboardButton(
                    "üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="smm_analytics"),
                InlineKeyboardButton("‚óÄÔ∏è‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_status")
            ]
        ]

        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.message.reply_text(
            analytics_text,
            reply_markup=reply_markup,
            parse_mode='Markdown'
        )

    except Exception as e:
        logger.error(f"Error in smm_analytics_command: {e}")
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: {str(e)}")


async def smm_create_post_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /smm_create_post - —Å–æ–∑–¥–∞—Ç—å —É–º–Ω—ã–π –ø–æ—Å—Ç"""

    if not is_admin(update.effective_user.id):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ")
        return

    try:
        smm_integration = get_smm_integration()

        if not smm_integration:
            await update.message.reply_text("‚ùå SMM —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
            return

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏ –ø–ª–∞–Ω–∏—Ä—É–µ–º –ø–æ—Å—Ç
        await update.message.reply_text("ü§ñ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç...")

        result = await smm_integration.schedule_smart_post()

        success_text = f"""‚úÖ **–ü–û–°–¢ –°–û–ó–î–ê–ù –ò –ó–ê–ü–õ–ê–ù–ò–†–û–í–ê–ù**

üÜî **ID –ø–æ—Å—Ç–∞:** {result['post_id']}
‚è∞ **–í—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:** {result['scheduled_time'][:19]}
üìä **–û–∂–∏–¥–∞–µ–º–æ–µ –≤–æ–≤–ª–µ—á–µ–Ω–∏–µ:** {result['expected_engagement']:.2%}
üß™ **A/B —Ç–µ—Å—Ç:** {'‚úÖ –í–∫–ª—é—á–µ–Ω' if result['ab_test_enabled'] else '‚ùå –í—ã–∫–ª—é—á–µ–Ω'}
üí¨ **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è–º–∏:** {'‚úÖ –í–∫–ª—é—á–µ–Ω–æ' if result['interaction_session_started'] else '‚ùå –í—ã–∫–ª—é—á–µ–Ω–æ'}

üéØ –ü–æ—Å—Ç –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è!"""

        keyboard = [
            [
                InlineKeyboardButton(
                    "üìù –°–æ–∑–¥–∞—Ç—å –µ—â–µ", callback_data="smm_create_post"),
                InlineKeyboardButton(
                    "üìã –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data="smm_schedule")
            ],
            [
                InlineKeyboardButton("‚óÄÔ∏è‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_status")
            ]
        ]

        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.message.reply_text(
            success_text,
            reply_markup=reply_markup,
            parse_mode='Markdown'
        )

    except Exception as e:
        logger.error(f"Error in smm_create_post_command: {e}")
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞: {str(e)}")


async def smm_settings_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /smm_settings - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SMM —Å–∏—Å—Ç–µ–º—ã"""

    if not is_admin(update.effective_user.id):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ")
        return

    try:
        smm_integration = get_smm_integration()

        if not smm_integration:
            await update.message.reply_text("‚ùå SMM —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
            return

        config = smm_integration.smm_config

        settings_text = f"""‚öôÔ∏è **–ù–ê–°–¢–†–û–ô–ö–ò SMM –°–ò–°–¢–ï–ú–´**

üéØ **–¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:**
‚Ä¢ –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: {config.system_mode.value}
‚Ä¢ –°—Ç—Ä–∞—Ç–µ–≥–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {config.content_strategy.value}
‚Ä¢ –ü–æ—Å—Ç–æ–≤ –≤ –¥–µ–Ω—å: {config.posts_per_day}
‚Ä¢ –£—Ä–æ–≤–µ–Ω—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏: {config.optimization_level.value}

üîß **–§—É–Ω–∫—Ü–∏–∏:**
‚Ä¢ A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {'‚úÖ' if config.enable_ab_testing else '‚ùå'}
‚Ä¢ –ê–≤—Ç–æ-–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è: {'‚úÖ' if config.enable_auto_interactions else '‚ùå'}
‚Ä¢ –í–∏—Ä—É—Å–Ω–∞—è –∞–º–ø–ª–∏—Ñ–∏–∫–∞—Ü–∏—è: {'‚úÖ' if config.enable_viral_amplification else '‚ùå'}

üìä **–¶–µ–ª–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏:**
‚Ä¢ Engagement rate: {config.target_engagement_rate:.1%}
‚Ä¢ Conversion rate: {config.target_conversion_rate:.1%}
‚Ä¢ –ü–æ—Ä–æ–≥ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {config.content_quality_threshold:.1%}"""

        keyboard = [
            [
                InlineKeyboardButton("üéØ –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é",
                                     callback_data="smm_change_strategy"),
                InlineKeyboardButton(
                    "üìù –ü–æ—Å—Ç–æ–≤ –≤ –¥–µ–Ω—å", callback_data="smm_change_frequency")
            ],
            [
                InlineKeyboardButton(
                    "üîß –§—É–Ω–∫—Ü–∏–∏", callback_data="smm_toggle_features"),
                InlineKeyboardButton(
                    "üìä –ú–µ—Ç—Ä–∏–∫–∏", callback_data="smm_set_targets")
            ],
            [
                InlineKeyboardButton("üîÑ –°–±—Ä–æ—Å –∫ —É–º–æ–ª—á–∞–Ω–∏—è–º",
                                     callback_data="smm_reset_config"),
                InlineKeyboardButton("‚óÄÔ∏è‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_status")
            ]
        ]

        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.message.reply_text(
            settings_text,
            reply_markup=reply_markup,
            parse_mode='Markdown'
        )

    except Exception as e:
        logger.error(f"Error in smm_settings_command: {e}")
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫: {str(e)}")


async def smm_callback_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è SMM –ø–∞–Ω–µ–ª–∏"""

    query = update.callback_query
    await query.answer()

    if not is_admin(query.from_user.id):
        await query.edit_message_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏")
        return

    try:
        smm_integration = get_smm_integration()

        if not smm_integration:
            await query.edit_message_text("‚ùå SMM —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
            return

        data = query.data

        if data == "smm_status":
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
            status = await smm_integration.smm_system.get_system_status()

            status_text = f"""üéØ **–°–¢–ê–¢–£–° SMM –°–ò–°–¢–ï–ú–´**

üîÑ **–°–æ—Å—Ç–æ—è–Ω–∏–µ:** {'üü¢ –ê–∫—Ç–∏–≤–Ω–∞' if status['is_running'] else 'üî¥ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'}
‚öôÔ∏è **–†–µ–∂–∏–º:** {status['system_mode']}
üìä **–°—Ç—Ä–∞—Ç–µ–≥–∏—è:** {status['content_strategy']}

üìù **–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã (24—á):** {status['upcoming_posts_24h']}
üí¨ **–ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Å—Å–∏–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è:** {status['active_interaction_sessions']}
üí° **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:** {status['optimization_suggestions_count']}

üïê **–ü–æ—Å–ª–µ–¥–Ω—è—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è:** {status['last_optimization'][:19]}"""

            keyboard = [
                [
                    InlineKeyboardButton(
                        "üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞", callback_data="smm_analytics"),
                    InlineKeyboardButton(
                        "üéØ –°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç", callback_data="smm_create_post")
                ],
                [
                    InlineKeyboardButton(
                        "‚öôÔ∏è‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="smm_settings"),
                    InlineKeyboardButton(
                        "üîÑ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è", callback_data="smm_optimize")
                ],
                [
                    InlineKeyboardButton("üü¢ –°—Ç–∞—Ä—Ç" if not status['is_running'] else "üî¥ –°—Ç–æ–ø",
                                         callback_data="smm_toggle"),
                    InlineKeyboardButton(
                        "üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="smm_status")
                ]
            ]

            reply_markup = InlineKeyboardMarkup(keyboard)

            await query.edit_message_text(
                status_text,
                reply_markup=reply_markup,
                parse_mode='Markdown'
            )

        elif data == "smm_analytics":
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É
            analytics = await smm_integration.get_smm_analytics_report(days_back=7)
            smm_perf = analytics.get('smm_performance', {})

            analytics_text = f"""üìä **–ê–ù–ê–õ–ò–¢–ò–ö–ê SMM** (7 –¥–Ω–µ–π)

üìù **–ö–æ–Ω—Ç–µ–Ω—Ç:** {smm_perf.get('total_posts', 0)} –ø–æ—Å—Ç–æ–≤
üí¨ **–í–æ–≤–ª–µ—á–µ–Ω–∏–µ:** {smm_perf.get('total_engagement', 0):,}
üìà **Engagement rate:** {smm_perf.get('engagement_rate', 0):.2%}
üéØ **–ö–æ–Ω–≤–µ—Ä—Å–∏–∏:** {smm_perf.get('conversions', 0)}
üí∞ **–î–æ—Ö–æ–¥:** {smm_perf.get('revenue_attributed', 0):,.0f}‚ÇΩ"""

            keyboard = [
                [
                    InlineKeyboardButton(
                        "üìà –ü–æ–¥—Ä–æ–±–Ω–µ–µ", callback_data="smm_detailed_analytics"),
                    InlineKeyboardButton(
                        "üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="smm_analytics")
                ],
                [
                    InlineKeyboardButton(
                        "‚óÄÔ∏è‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_status")
                ]
            ]

            reply_markup = InlineKeyboardMarkup(keyboard)

            await query.edit_message_text(
                analytics_text,
                reply_markup=reply_markup,
                parse_mode='Markdown'
            )

        elif data == "smm_create_post":
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø–æ—Å—Ç
            await query.edit_message_text("ü§ñ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç...")

            result = await smm_integration.schedule_smart_post()

            success_text = f"""‚úÖ **–ü–û–°–¢ –°–û–ó–î–ê–ù**

üÜî {result['post_id']}
‚è∞ {result['scheduled_time'][:19]}
üìä –û–∂–∏–¥–∞–µ–º–æ–µ –≤–æ–≤–ª–µ—á–µ–Ω–∏–µ: {result['expected_engagement']:.2%}"""

            keyboard = [
                [
                    InlineKeyboardButton(
                        "üìù –°–æ–∑–¥–∞—Ç—å –µ—â–µ", callback_data="smm_create_post"),
                    InlineKeyboardButton(
                        "‚óÄÔ∏è‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_status")
                ]
            ]

            reply_markup = InlineKeyboardMarkup(keyboard)

            await query.edit_message_text(
                success_text,
                reply_markup=reply_markup,
                parse_mode='Markdown'
            )

        elif data == "smm_change_strategy":
            # –ú–µ–Ω—é —Å–º–µ–Ω—ã —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
            strategy_text = """üéØ **–í–´–ë–ï–†–ò–¢–ï –°–¢–†–ê–¢–ï–ì–ò–Æ –ö–û–ù–¢–ï–ù–¢–ê:**

üî• **–í–∏—Ä—É—Å–Ω–∞—è** - —Ñ–æ–∫—É—Å –Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ
üí∞ **–ö–æ–Ω–≤–µ—Ä—Å–∏–æ–Ω–Ω–∞—è** - —Ñ–æ–∫—É—Å –Ω–∞ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤  
üí¨ **–í–æ–≤–ª–µ—á–µ–Ω–∏–µ** - —Ñ–æ–∫—É—Å –Ω–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –∞—É–¥–∏—Ç–æ—Ä–∏–µ–π
‚öñÔ∏è **–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è** - —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥
üìö **–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è** - —Ñ–æ–∫—É—Å –Ω–∞ –æ–±—É—á–∞—é—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç"""

            keyboard = [
                [
                    InlineKeyboardButton(
                        "üî• –í–∏—Ä—É—Å–Ω–∞—è", callback_data="strategy_viral_focused"),
                    InlineKeyboardButton(
                        "üí∞ –ö–æ–Ω–≤–µ—Ä—Å–∏–æ–Ω–Ω–∞—è", callback_data="strategy_conversion_focused")
                ],
                [
                    InlineKeyboardButton(
                        "üí¨ –í–æ–≤–ª–µ—á–µ–Ω–∏–µ", callback_data="strategy_engagement_focused"),
                    InlineKeyboardButton(
                        "‚öñÔ∏è –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è", callback_data="strategy_balanced")
                ],
                [
                    InlineKeyboardButton(
                        "üìö –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è", callback_data="strategy_educational"),
                    InlineKeyboardButton(
                        "‚óÄÔ∏è‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_settings")
                ]
            ]

            reply_markup = InlineKeyboardMarkup(keyboard)

            await query.edit_message_text(
                strategy_text,
                reply_markup=reply_markup,
                parse_mode='Markdown'
            )

        elif data.startswith("strategy_"):
            # –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é
            strategy_map = {
                "strategy_viral_focused": "viral_focused",
                "strategy_conversion_focused": "conversion_focused",
                "strategy_engagement_focused": "engagement_focused",
                "strategy_balanced": "balanced",
                "strategy_educational": "educational"
            }

            new_strategy = strategy_map.get(data)
            if new_strategy:
                # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º SMM —Å–∏—Å—Ç–µ–º—ã
                result = await smm_integration.switch_smm_mode(new_strategy)

                if result['success']:
                    await query.edit_message_text(
                        f"‚úÖ –°—Ç—Ä–∞—Ç–µ–≥–∏—è –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞: **{result['new_mode']}**\n\n"
                        f"üîÑ –ù–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n"
                        f"‚Ä¢ –ü–æ—Å—Ç–æ–≤ –≤ –¥–µ–Ω—å: {result['config_changes']['posts_per_day']}\n"
                        f"‚Ä¢ A/B —Ç–µ—Å—Ç—ã: {'‚úÖ' if result['config_changes']['ab_testing_enabled'] else '‚ùå'}\n"
                        f"‚Ä¢ –í–∏—Ä—É—Å–Ω–∞—è –∞–º–ø–ª–∏—Ñ–∏–∫–∞—Ü–∏—è: {'‚úÖ' if result['config_changes']['viral_amplification_enabled'] else '‚ùå'}",
                        parse_mode='Markdown'
                    )
                else:
                    await query.edit_message_text(f"‚ùå –û—à–∏–±–∫–∞ —Å–º–µ–Ω—ã —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏: {result['error']}")

        elif data == "smm_optimize":
            # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é
            await query.edit_message_text("üîÑ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É—é —Å–∏—Å—Ç–µ–º—É...")

            optimization_result = await smm_integration.optimize_smm_strategy()

            if 'error' in optimization_result:
                await query.edit_message_text(f"‚ùå –û—à–∏–±–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏: {optimization_result['error']}")
            else:
                applied = len(optimization_result.get(
                    'applied_automatically', []))
                manual = len(optimization_result.get(
                    'requires_manual_review', []))

                result_text = f"""üîÑ **–û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê**

‚úÖ –ü—Ä–∏–º–µ–Ω–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏: {applied}
‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏: {manual}

üí° –°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!"""

                keyboard = [
                    [
                        InlineKeyboardButton(
                            "üìã –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏", callback_data="smm_optimization_details"),
                        InlineKeyboardButton(
                            "‚óÄÔ∏è‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="smm_status")
                    ]
                ]

                reply_markup = InlineKeyboardMarkup(keyboard)

                await query.edit_message_text(
                    result_text,
                    reply_markup=reply_markup,
                    parse_mode='Markdown'
                )

        else:
            await query.edit_message_text("‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞")

    except Exception as e:
        logger.error(f"Error in smm_callback_handler: {e}")
        await query.edit_message_text(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
def register_smm_admin_handlers(application):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ SMM"""

    application.add_handler(CommandHandler("smm_status", smm_status_command))
    application.add_handler(CommandHandler(
        "smm_analytics", smm_analytics_command))
    application.add_handler(CommandHandler(
        "smm_create_post", smm_create_post_command))
    application.add_handler(CommandHandler(
        "smm_settings", smm_settings_command))

    # Callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö SMM –∫–æ–º–∞–Ω–¥
    application.add_handler(CallbackQueryHandler(
        smm_callback_handler, pattern="^smm_|^strategy_"))
