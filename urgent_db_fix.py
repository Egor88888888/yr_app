#!/usr/bin/env python3
"""
üö® URGENT DATABASE FIX: Telegram ID Overflow
–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –Ω–∞ Railway –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è INTEGER ‚Üí BIGINT
"""

import os
import asyncio
from sqlalchemy import create_engine, text
from sqlalchemy.ext.asyncio import create_async_engine


async def urgent_fix():
    """–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Ñ–∏–∫—Å –ë–î –ø—Ä—è–º–æ –Ω–∞ Railway"""

    DATABASE_URL = os.getenv("DATABASE_URL")
    if not DATABASE_URL:
        print("‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False

    # –§–∏–∫—Å –¥–ª—è asyncpg
    if DATABASE_URL.startswith("postgresql://"):
        DATABASE_URL = DATABASE_URL.replace(
            "postgresql://", "postgresql+asyncpg://", 1)

    print("üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –§–ò–ö–°: Telegram ID overflow")
    print("üîß –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è INTEGER ‚Üí BIGINT...")

    try:
        engine = create_async_engine(DATABASE_URL)

        async with engine.begin() as conn:

            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º users.tg_id
            print("üîß –§–∏–∫—Å–∏–º users.tg_id...")
            await conn.execute(text("ALTER TABLE users ALTER COLUMN tg_id TYPE BIGINT;"))

            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º admins.tg_id
            print("üîß –§–∏–∫—Å–∏–º admins.tg_id...")
            await conn.execute(text("ALTER TABLE admins ALTER COLUMN tg_id TYPE BIGINT;"))

            print("‚úÖ –§–ò–ö–° –ü–†–ò–ú–ï–ù–ï–ù!")
            print("üéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–π ID...")

            # –¢–µ—Å—Ç
            await conn.execute(text("""
                INSERT INTO users (tg_id, first_name, preferred_contact, created_at, updated_at)
                VALUES (6922033571, 'Test User', 'telegram', NOW(), NOW())
                ON CONFLICT (tg_id) DO UPDATE SET updated_at = NOW()
            """))

            print("‚úÖ –ë–æ–ª—å—à–∏–µ Telegram ID —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞—é—Ç!")

        await engine.dispose()
        return True

    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
        return False

if __name__ == "__main__":
    result = asyncio.run(urgent_fix())
    if result:
        print("üéâ –ì–û–¢–û–í–û! –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–π—Ç–µ –±–æ—Ç–∞!")
    else:
        print("‚ùå –§–∏–∫—Å –Ω–µ —É–¥–∞–ª—Å—è!")
