#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –í–°–ï–• —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ —Å —ç–º–æ–¥–∑–∏ –≤ bot/main.py
"""

import re


def contains_emoji(text):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Ç–µ–∫—Å—Ç —ç–º–æ–¥–∑–∏"""
    emoji_pattern = re.compile("["
                               "\U0001F600-\U0001F64F"  # emoticons
                               "\U0001F300-\U0001F5FF"  # symbols & pictographs
                               "\U0001F680-\U0001F6FF"  # transport & map symbols
                               "\U0001F1E0-\U0001F1FF"  # flags (iOS)
                               "\U00002500-\U00002BEF"  # chinese char
                               "\U00002702-\U000027B0"
                               "\U00002702-\U000027B0"
                               "\U000024C2-\U0001F251"
                               "\U0001f926-\U0001f937"
                               "\U00010000-\U0010ffff"
                               "\u2640-\u2642"
                               "\u2600-\u2B55"
                               "\u200d"
                               "\u23cf"
                               "\u23e9"
                               "\u231a"
                               "\ufe0f"  # dingbats
                               "\u3030"
                               "]+", flags=re.UNICODE)
    return emoji_pattern.search(text) is not None


def is_inside_string(line, emoji_pos):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ —ç–º–æ–¥–∑–∏ –≤–Ω—É—Ç—Ä–∏ —Å—Ç—Ä–æ–∫–æ–≤–æ–≥–æ –ª–∏—Ç–µ—Ä–∞–ª–∞"""
    # –ò—â–µ–º –≤—Å–µ —Å—Ç—Ä–æ–∫–æ–≤—ã–µ –ª–∏—Ç–µ—Ä–∞–ª—ã –≤ —Å—Ç—Ä–æ–∫–µ
    patterns = [
        r'""".*?"""',  # —Ç—Ä–æ–π–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏
        r"'''.*?'''",  # —Ç—Ä–æ–π–Ω—ã–µ –∞–ø–æ—Å—Ç—Ä–æ—Ñ—ã
        r'f""".*?"""',  # f-—Å—Ç—Ä–æ–∫–∏ —Å —Ç—Ä–æ–π–Ω—ã–º–∏ –∫–∞–≤—ã—á–∫–∞–º–∏
        r"f'''.*?'''",  # f-—Å—Ç—Ä–æ–∫–∏ —Å —Ç—Ä–æ–π–Ω—ã–º–∏ –∞–ø–æ—Å—Ç—Ä–æ—Ñ–∞–º–∏
        r'f".*?"',     # f-—Å—Ç—Ä–æ–∫–∏ —Å –æ–±—ã—á–Ω—ã–º–∏ –∫–∞–≤—ã—á–∫–∞–º–∏
        r"f'.*?'",     # f-—Å—Ç—Ä–æ–∫–∏ —Å –∞–ø–æ—Å—Ç—Ä–æ—Ñ–∞–º–∏
        r'".*?"',      # –æ–±—ã—á–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –≤ –∫–∞–≤—ã—á–∫–∞—Ö
        r"'.*?'"       # –æ–±—ã—á–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –≤ –∞–ø–æ—Å—Ç—Ä–æ—Ñ–∞—Ö
    ]

    for pattern in patterns:
        for match in re.finditer(pattern, line):
            if match.start() <= emoji_pos <= match.end():
                return True
    return False


def fix_all_emoji_errors():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ —Å —ç–º–æ–¥–∑–∏"""
    print("üîß –ü–æ–∏—Å–∫ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —ç–º–æ–¥–∑–∏...")

    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    try:
        with open('bot/main.py', 'r', encoding='utf-8') as f:
            lines = f.readlines()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
        return False

    fixed_count = 0
    in_multiline_string = False

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é —Å—Ç—Ä–æ–∫—É
    for i, line in enumerate(lines):
        line_num = i + 1

        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–∂–µ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
        if line.strip().startswith('#'):
            continue

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã—Ö —Å—Ç—Ä–æ–∫
        triple_quote_count = line.count('"""') + line.count("'''")
        if triple_quote_count % 2 == 1:
            in_multiline_string = not in_multiline_string

        # –ï—Å–ª–∏ –º—ã –≤–Ω—É—Ç—Ä–∏ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–æ–π —Å—Ç—Ä–æ–∫–∏, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
        if in_multiline_string:
            continue

        # –ò—â–µ–º —ç–º–æ–¥–∑–∏ –≤ —Å—Ç—Ä–æ–∫–µ
        if contains_emoji(line):
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π —ç–º–æ–¥–∑–∏
            problem_found = False
            for match in re.finditer(r'[\U0001F000-\U0001F9FF]', line):
                emoji_pos = match.start()
                if not is_inside_string(line, emoji_pos):
                    problem_found = True
                    break

            if problem_found:
                # –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—É—é —Å—Ç—Ä–æ–∫—É
                lines[i] = f"# {line}"
                print(
                    f"Line {line_num}: –ù–∞–π–¥–µ–Ω —ç–º–æ–¥–∑–∏ –≤–Ω–µ —Å—Ç—Ä–æ–∫–∏ - –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∞")
                fixed_count += 1

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    try:
        with open('bot/main.py', 'w', encoding='utf-8') as f:
            f.writelines(lines)
        print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ {fixed_count} —Å—Ç—Ä–æ–∫ —Å —ç–º–æ–¥–∑–∏!")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞: {e}")
        return False


if __name__ == "__main__":
    fix_all_emoji_errors()
