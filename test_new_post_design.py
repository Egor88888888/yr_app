#!/usr/bin/env python3
"""
üé® –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ù–û–í–û–ì–û –ü–†–û–§–ï–°–°–ò–û–ù–ê–õ–¨–ù–û–ì–û –î–ò–ó–ê–ô–ù–ê –ü–û–°–¢–û–í
"""

import asyncio
from bot.services.content_intelligence.post_generator import PostGenerator

async def demo_new_design():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤—ã—Ö —ç–ª–µ–≥–∞–Ω—Ç–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤"""
    
    generator = PostGenerator()
    
    print("=" * 80)
    print("üé® –ù–û–í–´–ô –≠–õ–ï–ì–ê–ù–¢–ù–´–ô –î–ò–ó–ê–ô–ù –ü–û–°–¢–û–í")
    print("=" * 80)
    
    # 1. –ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø—Ä–µ—Ü–µ–¥–µ–Ω—Ç
    print("\n1Ô∏è‚É£ –ë–ê–ù–ö–û–í–°–ö–ò–ô –ü–†–ï–¶–ï–î–ï–ù–¢:")
    print("-" * 50)
    banking_post = await generator.create_banking_precedent_post()
    print(banking_post)
    
    print("\n" + "=" * 80)
    
    # 2. –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–æ–µ –ø—Ä–∞–≤–æ
    print("\n2Ô∏è‚É£ –ü–û–¢–†–ï–ë–ò–¢–ï–õ–¨–°–ö–û–ï –ü–†–ê–í–û:")
    print("-" * 50)
    consumer_post = await generator.generate_case_post('consumer_protection')
    print(consumer_post)
    
    print("\n" + "=" * 80)
    
    # 3. –¢—Ä—É–¥–æ–≤–æ–µ –ø—Ä–∞–≤–æ
    print("\n3Ô∏è‚É£ –¢–†–£–î–û–í–û–ï –ü–†–ê–í–û:")
    print("-" * 50)
    labor_post = await generator.generate_case_post('labor_law')
    print(labor_post)
    
    print("\n" + "=" * 80)
    
    # 4. –°–µ–º–µ–π–Ω–æ–µ –ø—Ä–∞–≤–æ
    print("\n4Ô∏è‚É£ –°–ï–ú–ï–ô–ù–û–ï –ü–†–ê–í–û:")
    print("-" * 50)
    family_post = await generator.generate_case_post('family_law')
    print(family_post)
    
    print("\n" + "=" * 80)
    print("‚ú® –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê")
    print("=" * 80)

if __name__ == "__main__":
    asyncio.run(demo_new_design())